--[[

Scripts by ._.kinzin ðŸ‘»  
UI by deusferrinho ðŸ‘‘  
(All Discord usernames)
Converted by G2L by @uniquadev  

]]

local G2L = {};
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2"]["Size"] = UDim2.new(0, 425, 0, 250);
G2L["2"]["Position"] = UDim2.new(0.28571, 27, 0.32491, -11);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["BackgroundTransparency"] = 1;
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(39, 37, 40);
G2L["3"]["AnchorPoint"] = Vector2.new(0.5, 0);
G2L["3"]["Size"] = UDim2.new(1, 0, 0.08, 0);
G2L["3"]["Position"] = UDim2.new(0.5, 0, 0, 0);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Name"] = [[TopBar]];
G2L["4"] = Instance.new("ImageButton", G2L["3"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(38, 36, 39);
G2L["4"]["AnchorPoint"] = Vector2.new(1, 0.5);
G2L["4"]["Image"] = [[rbxassetid://10002373478]];
G2L["4"]["Size"] = UDim2.new(0.04706, 0, 1, 0);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Name"] = [[X]];
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Position"] = UDim2.new(1, 0, 0.5, 0);


-- StarterGui.AAGGXENOSS.Frame.TopBar.X.LocalScript
G2L["5"] = Instance.new("LocalScript", G2L["4"]);



-- StarterGui.AAGGXENOSS.Frame.TopBar.X.2
G2L["6"] = Instance.new("LocalScript", G2L["4"]);
G2L["6"]["Name"] = [[2]];


-- StarterGui.AAGGXENOSS.Frame.TopBar.Name
G2L["7"] = Instance.new("TextLabel", G2L["3"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextSize"] = 12;
G2L["7"]["TextScaled"] = true;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Size"] = UDim2.new(0.16933, 0, 1, 0);
G2L["7"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["Text"] = [[StellySpy]];
G2L["7"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["7"]["Name"] = [[Name]];
G2L["7"]["Position"] = UDim2.new(0.01, 0, -0.05, 0);


-- StarterGui.AAGGXENOSS.Frame.TopBar.Name.UITextSizeConstraint
G2L["8"] = Instance.new("UITextSizeConstraint", G2L["7"]);
G2L["8"]["MaxTextSize"] = 15;
G2L["8"]["MinTextSize"] = 15;


-- StarterGui.AAGGXENOSS.Frame.TopBar.Name.LocalScript
G2L["9"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.AAGGXENOSS.Frame.TopBar.Name.2
G2L["a"] = Instance.new("LocalScript", G2L["7"]);
G2L["a"]["Name"] = [[2]];


-- StarterGui.AAGGXENOSS.Frame.TopBar.V3
G2L["b"] = Instance.new("TextLabel", G2L["3"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextSize"] = 12;
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["Size"] = UDim2.new(0.06059, 0, 1, 0);
G2L["b"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["Text"] = [[V3]];
G2L["b"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["b"]["Name"] = [[V3]];
G2L["b"]["Position"] = UDim2.new(0.16706, 0, -0.05, 0);


-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.UITextSizeConstraint
G2L["c"] = Instance.new("UITextSizeConstraint", G2L["b"]);
G2L["c"]["MaxTextSize"] = 15;
G2L["c"]["MinTextSize"] = 15;


-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.LocalScript
G2L["d"] = Instance.new("LocalScript", G2L["b"]);



-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.mobile
G2L["e"] = Instance.new("LocalScript", G2L["b"]);
G2L["e"]["Name"] = [[mobile]];


-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.2
G2L["f"] = Instance.new("LocalScript", G2L["b"]);
G2L["f"]["Name"] = [[2]];


-- StarterGui.AAGGXENOSS.Frame.Drag
G2L["10"] = Instance.new("LocalScript", G2L["2"]);
G2L["10"]["Name"] = [[Drag]];


-- StarterGui.AAGGXENOSS.Frame.resizer
G2L["11"] = Instance.new("Frame", G2L["2"]);
G2L["11"]["SizeConstraint"] = Enum.SizeConstraint.RelativeXX;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["ClipsDescendants"] = true;
G2L["11"]["Size"] = UDim2.new(0.07059, 0, 24.064, 0);
G2L["11"]["Position"] = UDim2.new(0.92941, 0, 0.872, 0);
G2L["11"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["11"]["Name"] = [[resizer]];
G2L["11"]["BackgroundTransparency"] = 1;


-- StarterGui.AAGGXENOSS.Frame.resizer.dragger
G2L["12"] = Instance.new("ImageButton", G2L["11"]);
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 86, 0);
G2L["12"]["ZIndex"] = 2;
G2L["12"]["Size"] = UDim2.new(1.9, 0, 0.04338, 0);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["Name"] = [[dragger]];
G2L["12"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);


-- StarterGui.AAGGXENOSS.Frame.resizer.dragger.UICorner
G2L["13"] = Instance.new("UICorner", G2L["12"]);
G2L["13"]["CornerRadius"] = UDim.new(0.5, 0);


-- StarterGui.AAGGXENOSS.Frame.reziserMain
G2L["14"] = Instance.new("LocalScript", G2L["2"]);
G2L["14"]["Name"] = [[reziserMain]];


-- StarterGui.AAGGXENOSS.Frame.resizerModule
G2L["15"] = Instance.new("ModuleScript", G2L["2"]);
G2L["15"]["Name"] = [[resizerModule]];


-- StarterGui.AAGGXENOSS.Frame.Remotes
G2L["16"] = Instance.new("ScrollingFrame", G2L["2"]);
G2L["16"]["Active"] = true;
G2L["16"]["ZIndex"] = 10;
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["16"]["ElasticBehavior"] = Enum.ElasticBehavior.Always;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["16"]["Name"] = [[Remotes]];
G2L["16"]["ScrollBarImageTransparency"] = 1;
G2L["16"]["HorizontalScrollBarInset"] = Enum.ScrollBarInset.Always;
G2L["16"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["16"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["16"]["Size"] = UDim2.new(0.29412, 0, 0.916, 0);
G2L["16"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Position"] = UDim2.new(0, 0, 0.538, 0);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["ScrollBarThickness"] = 0;
G2L["16"]["LayoutOrder"] = 1;


-- StarterGui.AAGGXENOSS.Frame.Remotes.UIPadding
G2L["17"] = Instance.new("UIPadding", G2L["16"]);
G2L["17"]["PaddingTop"] = UDim.new(0, 10);
G2L["17"]["PaddingLeft"] = UDim.new(0, 10);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts
G2L["18"] = Instance.new("TextButton", G2L["16"]);
G2L["18"]["TextWrapped"] = true;
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["TextSize"] = 14;
G2L["18"]["TextScaled"] = true;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["18"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["18"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["18"]["BackgroundTransparency"] = 0.8;
G2L["18"]["Name"] = [[Infoupdts]];
G2L["18"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["18"]["Text"] = [[Info & updts]];
G2L["18"]["Position"] = UDim2.new(0.45248, 0, 0.32273, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.border
G2L["19"] = Instance.new("Frame", G2L["18"]);
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["19"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.UITextSizeConstraint
G2L["1a"] = Instance.new("UITextSizeConstraint", G2L["18"]);
G2L["1a"]["MaxTextSize"] = 17;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.Animate
G2L["1b"] = Instance.new("LocalScript", G2L["18"]);
G2L["1b"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.UIStroke
G2L["1c"] = Instance.new("UIStroke", G2L["18"]);
G2L["1c"]["Transparency"] = 0.5;
G2L["1c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["1c"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.Function
G2L["1d"] = Instance.new("LocalScript", G2L["18"]);
G2L["1d"]["Name"] = [[Function]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote1
G2L["1e"] = Instance.new("TextButton", G2L["16"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["1e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["1e"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["1e"]["BackgroundTransparency"] = 0.8;
G2L["1e"]["Name"] = [[Remote1]];
G2L["1e"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["1e"]["Text"] = [[RemoteName]];
G2L["1e"]["Visible"] = false;
G2L["1e"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote1.border
G2L["1f"] = Instance.new("Frame", G2L["1e"]);
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["1f"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote1.UITextSizeConstraint
G2L["20"] = Instance.new("UITextSizeConstraint", G2L["1e"]);
G2L["20"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote1.Animate
G2L["21"] = Instance.new("LocalScript", G2L["1e"]);
G2L["21"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote1.UIStroke
G2L["22"] = Instance.new("UIStroke", G2L["1e"]);
G2L["22"]["Transparency"] = 0.5;
G2L["22"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["22"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote2
G2L["23"] = Instance.new("TextButton", G2L["16"]);
G2L["23"]["TextWrapped"] = true;
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["TextSize"] = 14;
G2L["23"]["TextScaled"] = true;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["23"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["23"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["23"]["BackgroundTransparency"] = 0.8;
G2L["23"]["Name"] = [[Remote2]];
G2L["23"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["23"]["Text"] = [[RemoteName]];
G2L["23"]["Visible"] = false;
G2L["23"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote2.border
G2L["24"] = Instance.new("Frame", G2L["23"]);
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["24"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote2.UITextSizeConstraint
G2L["25"] = Instance.new("UITextSizeConstraint", G2L["23"]);
G2L["25"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote2.Animate
G2L["26"] = Instance.new("LocalScript", G2L["23"]);
G2L["26"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote2.UIStroke
G2L["27"] = Instance.new("UIStroke", G2L["23"]);
G2L["27"]["Transparency"] = 0.5;
G2L["27"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["27"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote3
G2L["28"] = Instance.new("TextButton", G2L["16"]);
G2L["28"]["TextWrapped"] = true;
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["TextSize"] = 14;
G2L["28"]["TextScaled"] = true;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["28"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["28"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["28"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["28"]["BackgroundTransparency"] = 0.8;
G2L["28"]["Name"] = [[Remote3]];
G2L["28"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["28"]["Text"] = [[RemoteName]];
G2L["28"]["Visible"] = false;
G2L["28"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote3.border
G2L["29"] = Instance.new("Frame", G2L["28"]);
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["29"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote3.UITextSizeConstraint
G2L["2a"] = Instance.new("UITextSizeConstraint", G2L["28"]);
G2L["2a"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote3.Animate
G2L["2b"] = Instance.new("LocalScript", G2L["28"]);
G2L["2b"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote3.UIStroke
G2L["2c"] = Instance.new("UIStroke", G2L["28"]);
G2L["2c"]["Transparency"] = 0.5;
G2L["2c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2c"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote4
G2L["2d"] = Instance.new("TextButton", G2L["16"]);
G2L["2d"]["TextWrapped"] = true;
G2L["2d"]["BorderSizePixel"] = 0;
G2L["2d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2d"]["TextSize"] = 14;
G2L["2d"]["TextScaled"] = true;
G2L["2d"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["2d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["2d"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2d"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["2d"]["BackgroundTransparency"] = 0.8;
G2L["2d"]["Name"] = [[Remote4]];
G2L["2d"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["2d"]["Text"] = [[RemoteName]];
G2L["2d"]["Visible"] = false;
G2L["2d"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote4.border
G2L["2e"] = Instance.new("Frame", G2L["2d"]);
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["2e"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote4.UITextSizeConstraint
G2L["2f"] = Instance.new("UITextSizeConstraint", G2L["2d"]);
G2L["2f"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote4.Animate
G2L["30"] = Instance.new("LocalScript", G2L["2d"]);
G2L["30"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote4.UIStroke
G2L["31"] = Instance.new("UIStroke", G2L["2d"]);
G2L["31"]["Transparency"] = 0.5;
G2L["31"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["31"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote5
G2L["32"] = Instance.new("TextButton", G2L["16"]);
G2L["32"]["TextWrapped"] = true;
G2L["32"]["BorderSizePixel"] = 0;
G2L["32"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32"]["TextSize"] = 14;
G2L["32"]["TextScaled"] = true;
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["32"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["32"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["32"]["BackgroundTransparency"] = 0.8;
G2L["32"]["Name"] = [[Remote5]];
G2L["32"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["32"]["Text"] = [[RemoteName]];
G2L["32"]["Visible"] = false;
G2L["32"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote5.border
G2L["33"] = Instance.new("Frame", G2L["32"]);
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["33"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote5.UITextSizeConstraint
G2L["34"] = Instance.new("UITextSizeConstraint", G2L["32"]);
G2L["34"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote5.Animate
G2L["35"] = Instance.new("LocalScript", G2L["32"]);
G2L["35"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote5.UIStroke
G2L["36"] = Instance.new("UIStroke", G2L["32"]);
G2L["36"]["Transparency"] = 0.5;
G2L["36"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["36"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote6
G2L["37"] = Instance.new("TextButton", G2L["16"]);
G2L["37"]["TextWrapped"] = true;
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["TextSize"] = 14;
G2L["37"]["TextScaled"] = true;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["37"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["37"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["37"]["BackgroundTransparency"] = 0.8;
G2L["37"]["Name"] = [[Remote6]];
G2L["37"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["37"]["Text"] = [[RemoteName]];
G2L["37"]["Visible"] = false;
G2L["37"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote6.border
G2L["38"] = Instance.new("Frame", G2L["37"]);
G2L["38"]["BorderSizePixel"] = 0;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["38"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote6.UITextSizeConstraint
G2L["39"] = Instance.new("UITextSizeConstraint", G2L["37"]);
G2L["39"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote6.Animate
G2L["3a"] = Instance.new("LocalScript", G2L["37"]);
G2L["3a"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote6.UIStroke
G2L["3b"] = Instance.new("UIStroke", G2L["37"]);
G2L["3b"]["Transparency"] = 0.5;
G2L["3b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["3b"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote8
G2L["3c"] = Instance.new("TextButton", G2L["16"]);
G2L["3c"]["TextWrapped"] = true;
G2L["3c"]["BorderSizePixel"] = 0;
G2L["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["TextSize"] = 14;
G2L["3c"]["TextScaled"] = true;
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["3c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3c"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["3c"]["BackgroundTransparency"] = 0.8;
G2L["3c"]["Name"] = [[Remote8]];
G2L["3c"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["3c"]["Text"] = [[RemoteName]];
G2L["3c"]["Visible"] = false;
G2L["3c"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote8.border
G2L["3d"] = Instance.new("Frame", G2L["3c"]);
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["3d"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote8.UITextSizeConstraint
G2L["3e"] = Instance.new("UITextSizeConstraint", G2L["3c"]);
G2L["3e"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote8.Animate
G2L["3f"] = Instance.new("LocalScript", G2L["3c"]);
G2L["3f"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote8.UIStroke
G2L["40"] = Instance.new("UIStroke", G2L["3c"]);
G2L["40"]["Transparency"] = 0.5;
G2L["40"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["40"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote9
G2L["41"] = Instance.new("TextButton", G2L["16"]);
G2L["41"]["TextWrapped"] = true;
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["TextSize"] = 14;
G2L["41"]["TextScaled"] = true;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["41"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["41"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["41"]["BackgroundTransparency"] = 0.8;
G2L["41"]["Name"] = [[Remote9]];
G2L["41"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["41"]["Text"] = [[RemoteName]];
G2L["41"]["Visible"] = false;
G2L["41"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote9.border
G2L["42"] = Instance.new("Frame", G2L["41"]);
G2L["42"]["BorderSizePixel"] = 0;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["42"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote9.UITextSizeConstraint
G2L["43"] = Instance.new("UITextSizeConstraint", G2L["41"]);
G2L["43"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote9.Animate
G2L["44"] = Instance.new("LocalScript", G2L["41"]);
G2L["44"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote9.UIStroke
G2L["45"] = Instance.new("UIStroke", G2L["41"]);
G2L["45"]["Transparency"] = 0.5;
G2L["45"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["45"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote10
G2L["46"] = Instance.new("TextButton", G2L["16"]);
G2L["46"]["TextWrapped"] = true;
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["TextSize"] = 14;
G2L["46"]["TextScaled"] = true;
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["46"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["46"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["46"]["BackgroundTransparency"] = 0.8;
G2L["46"]["Name"] = [[Remote10]];
G2L["46"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["46"]["Text"] = [[RemoteName]];
G2L["46"]["Visible"] = false;
G2L["46"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote10.border
G2L["47"] = Instance.new("Frame", G2L["46"]);
G2L["47"]["BorderSizePixel"] = 0;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["47"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote10.UITextSizeConstraint
G2L["48"] = Instance.new("UITextSizeConstraint", G2L["46"]);
G2L["48"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote10.Animate
G2L["49"] = Instance.new("LocalScript", G2L["46"]);
G2L["49"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote10.UIStroke
G2L["4a"] = Instance.new("UIStroke", G2L["46"]);
G2L["4a"]["Transparency"] = 0.5;
G2L["4a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["4a"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote7
G2L["4b"] = Instance.new("TextButton", G2L["16"]);
G2L["4b"]["TextWrapped"] = true;
G2L["4b"]["BorderSizePixel"] = 0;
G2L["4b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["TextSize"] = 14;
G2L["4b"]["TextScaled"] = true;
G2L["4b"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["4b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["4b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4b"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["4b"]["BackgroundTransparency"] = 0.8;
G2L["4b"]["Name"] = [[Remote7]];
G2L["4b"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["4b"]["Text"] = [[RemoteName]];
G2L["4b"]["Visible"] = false;
G2L["4b"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote7.border
G2L["4c"] = Instance.new("Frame", G2L["4b"]);
G2L["4c"]["BorderSizePixel"] = 0;
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["4c"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["4c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote7.UITextSizeConstraint
G2L["4d"] = Instance.new("UITextSizeConstraint", G2L["4b"]);
G2L["4d"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote7.Animate
G2L["4e"] = Instance.new("LocalScript", G2L["4b"]);
G2L["4e"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote7.UIStroke
G2L["4f"] = Instance.new("UIStroke", G2L["4b"]);
G2L["4f"]["Transparency"] = 0.5;
G2L["4f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["4f"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote11
G2L["50"] = Instance.new("TextButton", G2L["16"]);
G2L["50"]["TextWrapped"] = true;
G2L["50"]["BorderSizePixel"] = 0;
G2L["50"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50"]["TextSize"] = 14;
G2L["50"]["TextScaled"] = true;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["50"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["50"]["Size"] = UDim2.new(0, 100, 0, 22);
G2L["50"]["BackgroundTransparency"] = 0.8;
G2L["50"]["Name"] = [[Remote11]];
G2L["50"]["BorderColor3"] = Color3.fromRGB(94, 97, 103);
G2L["50"]["Text"] = [[RemoteName]];
G2L["50"]["Visible"] = false;
G2L["50"]["Position"] = UDim2.new(2.328, 0, 0.81304, 0);


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote11.border
G2L["51"] = Instance.new("Frame", G2L["50"]);
G2L["51"]["BorderSizePixel"] = 0;
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 255);
G2L["51"]["Size"] = UDim2.new(0.04, 0, 1, 0);
G2L["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["Name"] = [[border]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote11.UITextSizeConstraint
G2L["52"] = Instance.new("UITextSizeConstraint", G2L["50"]);
G2L["52"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote11.Animate
G2L["53"] = Instance.new("LocalScript", G2L["50"]);
G2L["53"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote11.UIStroke
G2L["54"] = Instance.new("UIStroke", G2L["50"]);
G2L["54"]["Transparency"] = 0.5;
G2L["54"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["54"]["Color"] = Color3.fromRGB(0, 171, 255);


-- StarterGui.AAGGXENOSS.Frame.Remotes.UIListLayout
G2L["55"] = Instance.new("UIListLayout", G2L["16"]);
G2L["55"]["Padding"] = UDim.new(0, 5);
G2L["55"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.AAGGXENOSS.Frame.Remotes.CanvasSize
G2L["56"] = Instance.new("LocalScript", G2L["16"]);
G2L["56"]["Name"] = [[CanvasSize]];


-- StarterGui.AAGGXENOSS.Frame.Assets
G2L["57"] = Instance.new("Folder", G2L["2"]);
G2L["57"]["Name"] = [[Assets]];


-- StarterGui.AAGGXENOSS.Frame.Buttons
G2L["58"] = Instance.new("ScrollingFrame", G2L["2"]);
G2L["58"]["Active"] = true;
G2L["58"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
G2L["58"]["ZIndex"] = 12;
G2L["58"]["BorderSizePixel"] = 0;
G2L["58"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["58"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["58"]["Name"] = [[Buttons]];
G2L["58"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["58"]["Size"] = UDim2.new(0, 300, 0, 84);
G2L["58"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["58"]["Position"] = UDim2.new(0.29412, 0, 0.66, 0);
G2L["58"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["58"]["ScrollBarThickness"] = 0;


-- StarterGui.AAGGXENOSS.Frame.Buttons.UIPadding
G2L["59"] = Instance.new("UIPadding", G2L["58"]);
G2L["59"]["PaddingTop"] = UDim.new(0, 5);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear
G2L["5a"] = Instance.new("TextButton", G2L["58"]);
G2L["5a"]["TextWrapped"] = true;
G2L["5a"]["BorderSizePixel"] = 0;
G2L["5a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["TextSize"] = 14;
G2L["5a"]["TextScaled"] = true;
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["5a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5a"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["5a"]["Name"] = [[Clear]];
G2L["5a"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["5a"]["Text"] = [[]];
G2L["5a"]["Position"] = UDim2.new(0, 0, 0.32941, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.Border
G2L["5b"] = Instance.new("Frame", G2L["5a"]);
G2L["5b"]["BorderSizePixel"] = 0;
G2L["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5b"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["5b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5b"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.TextLabel
G2L["5c"] = Instance.new("TextLabel", G2L["5a"]);
G2L["5c"]["TextWrapped"] = true;
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["TextSize"] = 14;
G2L["5c"]["TextScaled"] = true;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["BackgroundTransparency"] = 1;
G2L["5c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["5c"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c"]["Text"] = [[Clear Output]];
G2L["5c"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.TextLabel.UITextSizeConstraint
G2L["5d"] = Instance.new("UITextSizeConstraint", G2L["5c"]);
G2L["5d"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.UITextSizeConstraint
G2L["5e"] = Instance.new("UITextSizeConstraint", G2L["5a"]);
G2L["5e"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.UIStroke
G2L["5f"] = Instance.new("UIStroke", G2L["5a"]);
G2L["5f"]["Transparency"] = 0.5;
G2L["5f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["5f"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.Animate
G2L["60"] = Instance.new("LocalScript", G2L["5a"]);
G2L["60"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.LocalScript
G2L["61"] = Instance.new("LocalScript", G2L["5a"]);



-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL
G2L["62"] = Instance.new("TextButton", G2L["58"]);
G2L["62"]["TextWrapped"] = true;
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["TextSize"] = 14;
G2L["62"]["TextScaled"] = true;
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["62"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["62"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["62"]["Name"] = [[ClearL]];
G2L["62"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["62"]["Text"] = [[]];
G2L["62"]["Position"] = UDim2.new(0, 0, 0.32941, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.Border
G2L["63"] = Instance.new("Frame", G2L["62"]);
G2L["63"]["BorderSizePixel"] = 0;
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.TextLabel
G2L["64"] = Instance.new("TextLabel", G2L["62"]);
G2L["64"]["TextWrapped"] = true;
G2L["64"]["BorderSizePixel"] = 0;
G2L["64"]["TextSize"] = 14;
G2L["64"]["TextScaled"] = true;
G2L["64"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["64"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["BackgroundTransparency"] = 1;
G2L["64"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["64"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64"]["Text"] = [[Clear Log]];
G2L["64"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.TextLabel.UITextSizeConstraint
G2L["65"] = Instance.new("UITextSizeConstraint", G2L["64"]);
G2L["65"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.UITextSizeConstraint
G2L["66"] = Instance.new("UITextSizeConstraint", G2L["62"]);
G2L["66"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.UIStroke
G2L["67"] = Instance.new("UIStroke", G2L["62"]);
G2L["67"]["Transparency"] = 0.5;
G2L["67"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["67"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.Animate
G2L["68"] = Instance.new("LocalScript", G2L["62"]);
G2L["68"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC
G2L["69"] = Instance.new("TextButton", G2L["58"]);
G2L["69"]["TextWrapped"] = true;
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["69"]["TextSize"] = 14;
G2L["69"]["TextScaled"] = true;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["69"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["69"]["Name"] = [[CopyC]];
G2L["69"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["69"]["Text"] = [[]];
G2L["69"]["Position"] = UDim2.new(0, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.Border
G2L["6a"] = Instance.new("Frame", G2L["69"]);
G2L["6a"]["BorderSizePixel"] = 0;
G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.TextLabel
G2L["6b"] = Instance.new("TextLabel", G2L["69"]);
G2L["6b"]["TextWrapped"] = true;
G2L["6b"]["BorderSizePixel"] = 0;
G2L["6b"]["TextSize"] = 14;
G2L["6b"]["TextScaled"] = true;
G2L["6b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6b"]["BackgroundTransparency"] = 1;
G2L["6b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["6b"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["6b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6b"]["Text"] = [[Copy Code]];
G2L["6b"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.TextLabel.UITextSizeConstraint
G2L["6c"] = Instance.new("UITextSizeConstraint", G2L["6b"]);
G2L["6c"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.UITextSizeConstraint
G2L["6d"] = Instance.new("UITextSizeConstraint", G2L["69"]);
G2L["6d"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.UIStroke
G2L["6e"] = Instance.new("UIStroke", G2L["69"]);
G2L["6e"]["Transparency"] = 0.5;
G2L["6e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["6e"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.Animate
G2L["6f"] = Instance.new("LocalScript", G2L["69"]);
G2L["6f"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.LocalScript
G2L["70"] = Instance.new("LocalScript", G2L["69"]);



-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR
G2L["71"] = Instance.new("TextButton", G2L["58"]);
G2L["71"]["TextWrapped"] = true;
G2L["71"]["BorderSizePixel"] = 0;
G2L["71"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["71"]["TextSize"] = 14;
G2L["71"]["TextScaled"] = true;
G2L["71"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["71"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["71"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["71"]["Name"] = [[CopyR]];
G2L["71"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["71"]["Text"] = [[]];
G2L["71"]["Position"] = UDim2.new(0.32, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.Border
G2L["72"] = Instance.new("Frame", G2L["71"]);
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.TextLabel
G2L["73"] = Instance.new("TextLabel", G2L["71"]);
G2L["73"]["TextWrapped"] = true;
G2L["73"]["BorderSizePixel"] = 0;
G2L["73"]["TextSize"] = 14;
G2L["73"]["TextScaled"] = true;
G2L["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["73"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["BackgroundTransparency"] = 1;
G2L["73"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["73"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["73"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73"]["Text"] = [[Copy Remote]];
G2L["73"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.TextLabel.UITextSizeConstraint
G2L["74"] = Instance.new("UITextSizeConstraint", G2L["73"]);
G2L["74"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.UITextSizeConstraint
G2L["75"] = Instance.new("UITextSizeConstraint", G2L["71"]);
G2L["75"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.UIStroke
G2L["76"] = Instance.new("UIStroke", G2L["71"]);
G2L["76"]["Transparency"] = 0.5;
G2L["76"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["76"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.Animate
G2L["77"] = Instance.new("LocalScript", G2L["71"]);
G2L["77"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL
G2L["78"] = Instance.new("TextButton", G2L["58"]);
G2L["78"]["TextWrapped"] = true;
G2L["78"]["BorderSizePixel"] = 0;
G2L["78"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["78"]["TextSize"] = 14;
G2L["78"]["TextScaled"] = true;
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["78"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["78"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["78"]["Name"] = [[ExL]];
G2L["78"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["78"]["Text"] = [[]];
G2L["78"]["Position"] = UDim2.new(0, 0, 0.32941, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL.Border
G2L["79"] = Instance.new("Frame", G2L["78"]);
G2L["79"]["BorderSizePixel"] = 0;
G2L["79"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["79"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["79"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["79"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL.
G2L["7a"] = Instance.new("TextLabel", G2L["78"]);
G2L["7a"]["TextWrapped"] = true;
G2L["7a"]["BorderSizePixel"] = 0;
G2L["7a"]["TextSize"] = 14;
G2L["7a"]["TextScaled"] = true;
G2L["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7a"]["BackgroundTransparency"] = 1;
G2L["7a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7a"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["7a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7a"]["Text"] = [[Exclude Remote]];
G2L["7a"]["Name"] = [[]];
G2L["7a"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL..UITextSizeConstraint
G2L["7b"] = Instance.new("UITextSizeConstraint", G2L["7a"]);
G2L["7b"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL.UITextSizeConstraint
G2L["7c"] = Instance.new("UITextSizeConstraint", G2L["78"]);
G2L["7c"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL.UIStroke
G2L["7d"] = Instance.new("UIStroke", G2L["78"]);
G2L["7d"]["Transparency"] = 0.5;
G2L["7d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7d"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL.Animate
G2L["7e"] = Instance.new("LocalScript", G2L["78"]);
G2L["7e"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run
G2L["7f"] = Instance.new("TextButton", G2L["58"]);
G2L["7f"]["TextWrapped"] = true;
G2L["7f"]["BorderSizePixel"] = 0;
G2L["7f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7f"]["TextSize"] = 14;
G2L["7f"]["TextScaled"] = true;
G2L["7f"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["7f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7f"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["7f"]["Name"] = [[Run]];
G2L["7f"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["7f"]["Text"] = [[]];
G2L["7f"]["Position"] = UDim2.new(0.69333, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.Border
G2L["80"] = Instance.new("Frame", G2L["7f"]);
G2L["80"]["BorderSizePixel"] = 0;
G2L["80"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["80"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["80"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.TextLabel
G2L["81"] = Instance.new("TextLabel", G2L["7f"]);
G2L["81"]["TextWrapped"] = true;
G2L["81"]["BorderSizePixel"] = 0;
G2L["81"]["TextSize"] = 14;
G2L["81"]["TextScaled"] = true;
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["81"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81"]["BackgroundTransparency"] = 1;
G2L["81"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["81"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["Text"] = [[Fire or Invoke]];
G2L["81"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.TextLabel.UITextSizeConstraint
G2L["82"] = Instance.new("UITextSizeConstraint", G2L["81"]);
G2L["82"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.UITextSizeConstraint
G2L["83"] = Instance.new("UITextSizeConstraint", G2L["7f"]);
G2L["83"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.UIStroke
G2L["84"] = Instance.new("UIStroke", G2L["7f"]);
G2L["84"]["Transparency"] = 0.5;
G2L["84"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["84"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.Animate
G2L["85"] = Instance.new("LocalScript", G2L["7f"]);
G2L["85"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS
G2L["86"] = Instance.new("TextButton", G2L["58"]);
G2L["86"]["TextWrapped"] = true;
G2L["86"]["BorderSizePixel"] = 0;
G2L["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["86"]["TextSize"] = 14;
G2L["86"]["TextScaled"] = true;
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["86"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["86"]["Name"] = [[RunS]];
G2L["86"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["86"]["Text"] = [[]];
G2L["86"]["Position"] = UDim2.new(0.69333, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.Border
G2L["87"] = Instance.new("Frame", G2L["86"]);
G2L["87"]["BorderSizePixel"] = 0;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["87"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["87"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.TextLabel
G2L["88"] = Instance.new("TextLabel", G2L["86"]);
G2L["88"]["TextWrapped"] = true;
G2L["88"]["BorderSizePixel"] = 0;
G2L["88"]["TextSize"] = 14;
G2L["88"]["TextScaled"] = true;
G2L["88"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["88"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["88"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["88"]["BackgroundTransparency"] = 1;
G2L["88"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["88"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["88"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["88"]["Text"] = [[Run Code]];
G2L["88"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.TextLabel.UITextSizeConstraint
G2L["89"] = Instance.new("UITextSizeConstraint", G2L["88"]);
G2L["89"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.UITextSizeConstraint
G2L["8a"] = Instance.new("UITextSizeConstraint", G2L["86"]);
G2L["8a"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.UIStroke
G2L["8b"] = Instance.new("UIStroke", G2L["86"]);
G2L["8b"]["Transparency"] = 0.5;
G2L["8b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["8b"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.Animate
G2L["8c"] = Instance.new("LocalScript", G2L["86"]);
G2L["8c"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.LocalScript
G2L["8d"] = Instance.new("LocalScript", G2L["86"]);



-- StarterGui.AAGGXENOSS.Frame.Buttons.dc
G2L["8e"] = Instance.new("TextButton", G2L["58"]);
G2L["8e"]["TextWrapped"] = true;
G2L["8e"]["BorderSizePixel"] = 0;
G2L["8e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8e"]["TextSize"] = 14;
G2L["8e"]["TextScaled"] = true;
G2L["8e"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["8e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8e"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["8e"]["Name"] = [[dc]];
G2L["8e"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["8e"]["Text"] = [[]];
G2L["8e"]["Position"] = UDim2.new(0.69333, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.Border
G2L["8f"] = Instance.new("Frame", G2L["8e"]);
G2L["8f"]["BorderSizePixel"] = 0;
G2L["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8f"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8f"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.TextLabel
G2L["90"] = Instance.new("TextLabel", G2L["8e"]);
G2L["90"]["TextWrapped"] = true;
G2L["90"]["BorderSizePixel"] = 0;
G2L["90"]["TextSize"] = 14;
G2L["90"]["TextScaled"] = true;
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["90"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["BackgroundTransparency"] = 1;
G2L["90"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["90"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["90"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["90"]["Text"] = [[Discord]];
G2L["90"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.TextLabel.UITextSizeConstraint
G2L["91"] = Instance.new("UITextSizeConstraint", G2L["90"]);
G2L["91"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.UITextSizeConstraint
G2L["92"] = Instance.new("UITextSizeConstraint", G2L["8e"]);
G2L["92"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.UIStroke
G2L["93"] = Instance.new("UIStroke", G2L["8e"]);
G2L["93"]["Transparency"] = 0.5;
G2L["93"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["93"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.Animate
G2L["94"] = Instance.new("LocalScript", G2L["8e"]);
G2L["94"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.LocalScript
G2L["95"] = Instance.new("LocalScript", G2L["8e"]);



-- StarterGui.AAGGXENOSS.Frame.Buttons.yt
G2L["96"] = Instance.new("TextButton", G2L["58"]);
G2L["96"]["TextWrapped"] = true;
G2L["96"]["BorderSizePixel"] = 0;
G2L["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["96"]["TextSize"] = 14;
G2L["96"]["TextScaled"] = true;
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["96"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["96"]["Name"] = [[yt]];
G2L["96"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["96"]["Text"] = [[]];
G2L["96"]["Position"] = UDim2.new(0.69333, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.Border
G2L["97"] = Instance.new("Frame", G2L["96"]);
G2L["97"]["BorderSizePixel"] = 0;
G2L["97"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["97"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["97"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["97"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.TextLabel
G2L["98"] = Instance.new("TextLabel", G2L["96"]);
G2L["98"]["TextWrapped"] = true;
G2L["98"]["BorderSizePixel"] = 0;
G2L["98"]["TextSize"] = 14;
G2L["98"]["TextScaled"] = true;
G2L["98"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["98"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["98"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["98"]["BackgroundTransparency"] = 1;
G2L["98"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["98"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["98"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["98"]["Text"] = [[Youtube]];
G2L["98"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.TextLabel.UITextSizeConstraint
G2L["99"] = Instance.new("UITextSizeConstraint", G2L["98"]);
G2L["99"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.UITextSizeConstraint
G2L["9a"] = Instance.new("UITextSizeConstraint", G2L["96"]);
G2L["9a"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.UIStroke
G2L["9b"] = Instance.new("UIStroke", G2L["96"]);
G2L["9b"]["Transparency"] = 0.5;
G2L["9b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["9b"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.Animate
G2L["9c"] = Instance.new("LocalScript", G2L["96"]);
G2L["9c"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.LocalScript
G2L["9d"] = Instance.new("LocalScript", G2L["96"]);



-- StarterGui.AAGGXENOSS.Frame.Buttons.UIListLayout
G2L["9e"] = Instance.new("UIListLayout", G2L["58"]);
G2L["9e"]["Wraps"] = true;
G2L["9e"]["Padding"] = UDim.new(0, 5);
G2L["9e"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["9e"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL
G2L["9f"] = Instance.new("TextButton", G2L["58"]);
G2L["9f"]["TextWrapped"] = true;
G2L["9f"]["BorderSizePixel"] = 0;
G2L["9f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9f"]["TextSize"] = 14;
G2L["9f"]["TextScaled"] = true;
G2L["9f"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["9f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9f"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["9f"]["Name"] = [[FireALL]];
G2L["9f"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["9f"]["Text"] = [[]];
G2L["9f"]["Position"] = UDim2.new(0, 0, 0.32941, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.Border
G2L["a0"] = Instance.new("Frame", G2L["9f"]);
G2L["a0"]["BorderSizePixel"] = 0;
G2L["a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a0"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a0"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.TextLabel
G2L["a1"] = Instance.new("TextLabel", G2L["9f"]);
G2L["a1"]["TextWrapped"] = true;
G2L["a1"]["BorderSizePixel"] = 0;
G2L["a1"]["TextSize"] = 14;
G2L["a1"]["TextScaled"] = true;
G2L["a1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a1"]["BackgroundTransparency"] = 1;
G2L["a1"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["a1"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a1"]["Text"] = [[Fire all remotes]];
G2L["a1"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.TextLabel.UITextSizeConstraint
G2L["a2"] = Instance.new("UITextSizeConstraint", G2L["a1"]);
G2L["a2"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.Function
G2L["a3"] = Instance.new("LocalScript", G2L["9f"]);
G2L["a3"]["Name"] = [[Function]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.UIStroke
G2L["a4"] = Instance.new("UIStroke", G2L["9f"]);
G2L["a4"]["Transparency"] = 0.5;
G2L["a4"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["a4"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.UITextSizeConstraint
G2L["a5"] = Instance.new("UITextSizeConstraint", G2L["9f"]);
G2L["a5"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.Animate
G2L["a6"] = Instance.new("LocalScript", G2L["9f"]);
G2L["a6"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam
G2L["a7"] = Instance.new("TextButton", G2L["58"]);
G2L["a7"]["TextWrapped"] = true;
G2L["a7"]["BorderSizePixel"] = 0;
G2L["a7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a7"]["TextSize"] = 14;
G2L["a7"]["TextScaled"] = true;
G2L["a7"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["a7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a7"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["a7"]["Name"] = [[Spam]];
G2L["a7"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["a7"]["Text"] = [[]];
G2L["a7"]["Position"] = UDim2.new(0, 0, 0.32941, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.Border
G2L["a8"] = Instance.new("Frame", G2L["a7"]);
G2L["a8"]["BorderSizePixel"] = 0;
G2L["a8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a8"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["a8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a8"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.TextLabel
G2L["a9"] = Instance.new("TextLabel", G2L["a7"]);
G2L["a9"]["TextWrapped"] = true;
G2L["a9"]["BorderSizePixel"] = 0;
G2L["a9"]["TextSize"] = 14;
G2L["a9"]["TextScaled"] = true;
G2L["a9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a9"]["BackgroundTransparency"] = 1;
G2L["a9"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["a9"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a9"]["Text"] = [[Spam]];
G2L["a9"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.TextLabel.UITextSizeConstraint
G2L["aa"] = Instance.new("UITextSizeConstraint", G2L["a9"]);
G2L["aa"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.UIStroke
G2L["ab"] = Instance.new("UIStroke", G2L["a7"]);
G2L["ab"]["Transparency"] = 0.5;
G2L["ab"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["ab"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.UITextSizeConstraint
G2L["ac"] = Instance.new("UITextSizeConstraint", G2L["a7"]);
G2L["ac"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.Animate
G2L["ad"] = Instance.new("LocalScript", G2L["a7"]);
G2L["ad"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList
G2L["ae"] = Instance.new("TextButton", G2L["58"]);
G2L["ae"]["TextWrapped"] = true;
G2L["ae"]["BorderSizePixel"] = 0;
G2L["ae"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ae"]["TextSize"] = 14;
G2L["ae"]["TextScaled"] = true;
G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["ae"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ae"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["ae"]["Name"] = [[UpList]];
G2L["ae"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["ae"]["Text"] = [[]];
G2L["ae"]["Position"] = UDim2.new(0.69333, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.Border
G2L["af"] = Instance.new("Frame", G2L["ae"]);
G2L["af"]["BorderSizePixel"] = 0;
G2L["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["af"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["af"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.TextLabel
G2L["b0"] = Instance.new("TextLabel", G2L["ae"]);
G2L["b0"]["TextWrapped"] = true;
G2L["b0"]["BorderSizePixel"] = 0;
G2L["b0"]["TextSize"] = 14;
G2L["b0"]["TextScaled"] = true;
G2L["b0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b0"]["BackgroundTransparency"] = 1;
G2L["b0"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["b0"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["b0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b0"]["Text"] = [[Update Remotes]];
G2L["b0"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.TextLabel.UITextSizeConstraint
G2L["b1"] = Instance.new("UITextSizeConstraint", G2L["b0"]);
G2L["b1"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.UITextSizeConstraint
G2L["b2"] = Instance.new("UITextSizeConstraint", G2L["ae"]);
G2L["b2"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.UIStroke
G2L["b3"] = Instance.new("UIStroke", G2L["ae"]);
G2L["b3"]["Transparency"] = 0.5;
G2L["b3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["b3"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.Animate
G2L["b4"] = Instance.new("LocalScript", G2L["ae"]);
G2L["b4"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs
G2L["b5"] = Instance.new("TextButton", G2L["58"]);
G2L["b5"]["TextWrapped"] = true;
G2L["b5"]["BorderSizePixel"] = 0;
G2L["b5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b5"]["TextSize"] = 14;
G2L["b5"]["TextScaled"] = true;
G2L["b5"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 30);
G2L["b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b5"]["Size"] = UDim2.new(0, 95, 0, 18);
G2L["b5"]["Name"] = [[UpLogs]];
G2L["b5"]["BorderColor3"] = Color3.fromRGB(151, 151, 151);
G2L["b5"]["Text"] = [[]];
G2L["b5"]["Position"] = UDim2.new(0.69333, 0, 0.08235, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.Border
G2L["b6"] = Instance.new("Frame", G2L["b5"]);
G2L["b6"]["BorderSizePixel"] = 0;
G2L["b6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b6"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b6"]["Name"] = [[Border]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.TextLabel
G2L["b7"] = Instance.new("TextLabel", G2L["b5"]);
G2L["b7"]["TextWrapped"] = true;
G2L["b7"]["BorderSizePixel"] = 0;
G2L["b7"]["TextSize"] = 14;
G2L["b7"]["TextScaled"] = true;
G2L["b7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b7"]["BackgroundTransparency"] = 1;
G2L["b7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["b7"]["Size"] = UDim2.new(0.89474, 0, 1, 0);
G2L["b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b7"]["Text"] = [[Update Logs]];
G2L["b7"]["Position"] = UDim2.new(0.53684, 0, 0.48382, 0);


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.TextLabel.UITextSizeConstraint
G2L["b8"] = Instance.new("UITextSizeConstraint", G2L["b7"]);
G2L["b8"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.UITextSizeConstraint
G2L["b9"] = Instance.new("UITextSizeConstraint", G2L["b5"]);
G2L["b9"]["MaxTextSize"] = 14;


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.UIStroke
G2L["ba"] = Instance.new("UIStroke", G2L["b5"]);
G2L["ba"]["Transparency"] = 0.5;
G2L["ba"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["ba"]["Color"] = Color3.fromRGB(151, 151, 151);


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.Animate
G2L["bb"] = Instance.new("LocalScript", G2L["b5"]);
G2L["bb"]["Name"] = [[Animate]];


-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.LocalScript
G2L["bc"] = Instance.new("LocalScript", G2L["b5"]);



-- StarterGui.AAGGXENOSS.Frame.CDrag
G2L["bd"] = Instance.new("LocalScript", G2L["2"]);
G2L["bd"]["Name"] = [[CDrag]];


-- StarterGui.AAGGXENOSS.Frame.Main
G2L["be"] = Instance.new("LocalScript", G2L["2"]);
G2L["be"]["Name"] = [[Main]];


-- StarterGui.AAGGXENOSS.Frame.Background
G2L["bf"] = Instance.new("Frame", G2L["2"]);
G2L["bf"]["BorderSizePixel"] = 0;
G2L["bf"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["bf"]["Size"] = UDim2.new(0, 425, 0, 228);
G2L["bf"]["Position"] = UDim2.new(0, 0, 0.08, 0);
G2L["bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bf"]["Name"] = [[Background]];


-- StarterGui.AAGGXENOSS.Frame.Name
G2L["c0"] = Instance.new("LocalScript", G2L["2"]);
G2L["c0"]["Name"] = [[Name]];


-- StarterGui.AAGGXENOSS.Frame.Syntax
G2L["c1"] = Instance.new("ModuleScript", G2L["2"]);
G2L["c1"]["Name"] = [[Syntax]];


-- StarterGui.AAGGXENOSS.Frame.Syntax.lexer
G2L["c2"] = Instance.new("ModuleScript", G2L["c1"]);
G2L["c2"]["Name"] = [[lexer]];


-- StarterGui.AAGGXENOSS.Frame.Syntax.lexer.language
G2L["c3"] = Instance.new("ModuleScript", G2L["c2"]);
G2L["c3"]["Name"] = [[language]];


-- StarterGui.AAGGXENOSS.Frame.Syntax ~ client
G2L["c4"] = Instance.new("LocalScript", G2L["2"]);
G2L["c4"]["Name"] = [[Syntax ~ client]];


-- StarterGui.AAGGXENOSS.Frame.CodeHolder
G2L["c5"] = Instance.new("ScrollingFrame", G2L["2"]);
G2L["c5"]["Active"] = true;
G2L["c5"]["ZIndex"] = 11;
G2L["c5"]["BorderSizePixel"] = 0;
G2L["c5"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["Name"] = [[CodeHolder]];
G2L["c5"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["c5"]["Size"] = UDim2.new(0, 297, 0, 145);
G2L["c5"]["Position"] = UDim2.new(0.29924, 0, 0.0791, 0);
G2L["c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c5"]["ScrollBarThickness"] = 4;
G2L["c5"]["BackgroundTransparency"] = 1;


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.UIListLayout
G2L["c6"] = Instance.new("UIListLayout", G2L["c5"]);
G2L["c6"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample
G2L["c7"] = Instance.new("TextBox", G2L["c5"]);
G2L["c7"]["Interactable"] = false;
G2L["c7"]["Name"] = [[CodeSample]];
G2L["c7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c7"]["ZIndex"] = 10;
G2L["c7"]["BorderSizePixel"] = 0;
G2L["c7"]["TextTransparency"] = 1;
G2L["c7"]["TextSize"] = 11;
G2L["c7"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
G2L["c7"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c7"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 28);
G2L["c7"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c7"]["MultiLine"] = true;
G2L["c7"]["ClearTextOnFocus"] = false;
G2L["c7"]["Size"] = UDim2.new(1.0101, 0, 1.03603, 0);
G2L["c7"]["Position"] = UDim2.new(-0.00732, 0, -0, 0);
G2L["c7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c7"]["Text"] = [[]];


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.UITextSizeConstraint
G2L["c8"] = Instance.new("UITextSizeConstraint", G2L["c7"]);
G2L["c8"]["MaxTextSize"] = 16;
G2L["c8"]["MinTextSize"] = 15;


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.Anim
G2L["c9"] = Instance.new("LocalScript", G2L["c7"]);
G2L["c9"]["Name"] = [[Anim]];


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.Color
G2L["ca"] = Instance.new("LocalScript", G2L["c7"]);
G2L["ca"]["Enabled"] = false;
G2L["ca"]["Name"] = [[Color]];
G2L["ca"]["Disabled"] = true;


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.Resize
G2L["cb"] = Instance.new("LocalScript", G2L["c7"]);
G2L["cb"]["Name"] = [[Resize]];


-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.Lines
G2L["cc"] = Instance.new("TextLabel", G2L["c7"]);
G2L["cc"]["BorderSizePixel"] = 0;
G2L["cc"]["TextSize"] = 1;
G2L["cc"]["TextTransparency"] = 1;
G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cc"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cc"]["BackgroundTransparency"] = 1;
G2L["cc"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cc"]["Name"] = [[Lines]];


-- StarterGui.AAGGXENOSS.Client
G2L["cd"] = Instance.new("Folder", G2L["1"]);
G2L["cd"]["Name"] = [[Client]];


-- StarterGui.AAGGXENOSS.Client.SetCore
G2L["ce"] = Instance.new("LocalScript", G2L["cd"]);
G2L["ce"]["Name"] = [[SetCore]];


-- StarterGui.AAGGXENOSS.Client.Name
G2L["cf"] = Instance.new("LocalScript", G2L["cd"]);
G2L["cf"]["Name"] = [[Name]];


-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

G2L_MODULES[G2L["15"]] = {
Closure = function()
    local script = G2L["15"];local module = {}

local mouse = game.Players.LocalPlayer:GetMouse()

local DRAGGER_SIZE = 30
local DRAGGER_TRANSPARENCY = .5

local dragging = false

function module.makeResizable(obj:GuiObject, minSize)
	
	local resizer = script.Parent.resizer:Clone()
	local dragger = resizer.dragger
	
	resizer.Size = UDim2.fromOffset(DRAGGER_SIZE, DRAGGER_SIZE)
	resizer.Position = UDim2.new(1, -DRAGGER_SIZE, 1, -DRAGGER_SIZE)
	
	local duic = dragger.UICorner
	minSize = minSize or Vector2.new(160, 90)
	
	local startDrag, startSize
	local gui = obj:FindFirstAncestorWhichIsA("ScreenGui")
	resizer.Parent = obj

	local function finishResize(tr)
		dragger.Position = UDim2.new(0,0,0,0)
		dragger.Size = UDim2.new(2,0,2,0)
		dragger.Parent = resizer
		dragger.BackgroundTransparency = tr
		duic.Parent = dragger
		startDrag = nil
	end
	dragger.MouseButton1Down:Connect(function()
		if not startDrag then
			startSize = obj.AbsoluteSize			
			startDrag = Vector2.new(mouse.X, mouse.Y)
			dragger.BackgroundTransparency = 1
			dragger.Size = UDim2.fromOffset(gui.AbsoluteSize.X, gui.AbsoluteSize.Y)
			dragger.Position = UDim2.new(0,0,0,0)
			duic.Parent = nil
			dragger.Parent = gui
		end
	end)	
	dragger.MouseMoved:Connect(function()
		local TweenService = game:GetService("TweenService")
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)

		if startDrag then
			local m = Vector2.new(mouse.X, mouse.Y)
			local mouseMoved = Vector2.new(m.X - startDrag.X, m.Y - startDrag.Y)

			local s = startSize + mouseMoved
			local sx = math.max(minSize.X, s.X)
			local sy = math.max(minSize.Y, s.Y)

			local targetSize = UDim2.fromOffset(sx, sy)

			-- Cria e executa o Tween para suavizar o ajuste de tamanho
			local tween = TweenService:Create(obj, tweenInfo, { Size = targetSize })
			tween:Play()
		end
	end)
	dragger.MouseEnter:Connect(function()
		finishResize(DRAGGER_TRANSPARENCY)				
	end)
	dragger.MouseLeave:Connect(function()
		finishResize(1)
	end)		
	dragger.MouseButton1Up:Connect(function()
		finishResize(DRAGGER_TRANSPARENCY)
	end)	
end

function module.makeDraggable(obj)
	local UIS = game:GetService("UserInputService")
	local dragInput, dragStart
	local startPos = obj.Position 
	local dragger = obj	
	local function updateInput(input)
		local offset = input.Position - dragStart
		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + offset.X, startPos.Y.Scale, startPos.Y.Offset + offset.Y)
		game:GetService("TweenService"):Create(obj, TweenInfo.new(.50, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = Position}):Play()
	end
	dragger.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and not UIS:GetFocusedTextBox() then
			dragging = true
			dragStart = input.Position
			startPos = obj.Position
			module.dragged = obj
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	dragger.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			updateInput(input)
		end
	end)
end

return module

end;
};
G2L_MODULES[G2L["c1"]] = {
Closure = function()
    local script = G2L["c1"];export type HighlighterColors = { [string]: Color3 }

export type TextObject = TextLabel | TextBox

export type Lexer = {
	scan: (src: string) -> () -> (string, string),
	navigator: () -> any,
	finished: boolean?,
}

export type Highlighter = {
	defaultLexer: Lexer,
	setTokenColors: (colors: HighlighterColors?) -> (),
	refresh: () -> (),
}

export type ObjectData = {
	Text: string,
	Labels: { TextLabel },
	Lines: { string },
	Lexer: Lexer?,
	CustomLang: { [string]: string }?,
}

local function SanitizeRichText(s: string): string
	return string.gsub(
		string.gsub(string.gsub(string.gsub(string.gsub(s, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;"),
		"'",
		"&apos;"
	)
end

local function SanitizeTabs(s: string): string
	return string.gsub(s, "\t", "    ")
end

local function SanitizeControl(s: string): string
	return string.gsub(s, "[\0\1\2\3\4\5\6\7\8\11\12\13\14\15\16\17\18\19\20\21\22\23\24\25\26\27\28\29\30\31]+", "")
end

local TokenColors: HighlighterColors = {
	["background"] = Color3.fromRGB(47, 47, 47),
	["iden"] = Color3.fromRGB(234, 234, 234),
	["keyword"] = Color3.fromRGB(248, 109, 124),
	["builtin"] = Color3.fromRGB(132, 214, 247),
	["string"] = Color3.fromRGB(196, 255, 193),
	["number"] = Color3.fromRGB(255, 198, 0),
	["comment"] = Color3.fromRGB(140, 140, 155),
	["operator"] = Color3.fromRGB(255, 239, 148),
	["custom"] = Color3.fromRGB(119, 122, 255),
}
local ColorFormatter: { [Color3]: string } = {}
local LastData: { [TextObject]: ObjectData } = {}
local Cleanups: { [TextObject]: () -> () } = {}

local Highlighter = {
	defaultLexer = require(script.lexer),
	defaultLang = require(script.lexer.language)
}

function Highlighter.highlight()
	local Code = script.Parent.CodeHolder.CodeSample
	local lines = Code.Lines
	local textObject:TextBox = Code
	local src = SanitizeTabs(SanitizeControl(textObject.Text))
	local lexer = Highlighter.defaultLexer
	local customLang = Highlighter.defaultLang
	local forceUpdate = true
	local Lines = 1
	src:gsub("\n",function() Lines = ' ' ..Lines+1 end)
	local LinesText = ""
	for i = 1,Lines do
		LinesText = LinesText..i.."\n"
	end 
	lines.Text = LinesText
	-- Avoid updating when unnecessary
	local data = LastData[textObject]
	if data == nil then
		data = {
			Text = "",
			Labels = {},
			Lines = {},
			Lexer = lexer,
			CustomLang = customLang,
		}
		LastData[textObject] = data
	elseif forceUpdate ~= true and data.Text == src then
		return
	end

	local lineLabels = data.Labels
	local previousLines = data.Lines

	data.Lines = lines
	data.Text = src
	data.Lexer = lexer
	data.CustomLang = customLang

	-- Ensure valid object properties
	textObject.RichText = false
	textObject.Text = src
	textObject.TextXAlignment = Enum.TextXAlignment.Left
	textObject.TextYAlignment = Enum.TextYAlignment.Top
	-- textObject.BackgroundColor3 = TokenColors.background
	textObject.TextColor3 = TokenColors.iden
	textObject.TextTransparency = 1

	-- Build the highlight labels
	local lineFolder = textObject:FindFirstChild("SyntaxHighlights")
	if lineFolder == nil then
		local newLineFolder = Instance.new("Folder")
		newLineFolder.Name = "SyntaxHighlights"
		newLineFolder.Parent = textObject

		lineFolder = newLineFolder
	end

	-- Add a cleanup handler for this textObject
	local cleanup = Cleanups[textObject]
	if not cleanup then
		local connections: { RBXScriptConnection } = {}
		local function newCleanup()
			for _, label in ipairs(lineLabels) do
				label:Destroy()
			end
			table.clear(lineLabels)
			lineLabels = nil

			LastData[textObject] = nil
			Cleanups[textObject] = nil

			for _, connection in connections do
				connection:Disconnect()
			end
			table.clear(connections)
			connections = nil
		end
		Cleanups[textObject] = newCleanup
		cleanup = newCleanup

		table.insert(
			connections,
			textObject.AncestryChanged:Connect(function()
				if textObject.Parent then
					return
				end

				cleanup()
			end)
		)
		table.insert(
			connections,
			textObject:GetPropertyChangedSignal("TextBounds"):Connect(function()
				Highlighter.highlight({
					textObject = textObject,
					forceUpdate = true,
					lexer = lexer,
					customLang = customLang,
				})
			end)
		)
		table.insert(
			connections,
			textObject:GetPropertyChangedSignal("Text"):Connect(function()
				Highlighter.highlight({
					textObject = textObject,
					lexer = lexer,
					customLang = customLang,
				})
			end)
		)
		table.insert(
			connections,
			textObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
				Highlighter.highlight({
					textObject = textObject,
					forceUpdate = true,
					lexer = lexer,
					customLang = customLang,
				})
			end)
		)
	end

	-- Shortcut empty labels
	if src == "" then
		for l=1, #lineLabels do
			if lineLabels[l].Text == "" then continue end
			lineLabels[l].Text = ""
		end
		return cleanup
	end

	-- Wait for TextBounds to be non-NaN and non-zero because Roblox
	local textBounds = textObject.TextBounds
	while (textBounds.Y ~= textBounds.Y) or (textBounds.Y < 1) do
		task.wait()
		textBounds = textObject.TextBounds
	end

	if LastData[textObject] == nil then
		-- Got cleaned up while we were waiting
		return cleanup
	end

	local textHeight = textBounds.Y / Lines * textObject.LineHeight

	local richText, index, lineNumber = table.create(5), 0, 1
	for token: string, content: string in lexer.scan(src) do
		local Color =
			if customLang and customLang[content] then
				TokenColors["custom"]
			else
				TokenColors[token] or TokenColors["iden"]

		local tokenLines = string.split(SanitizeRichText(content), "\n")

		for l, line in ipairs(tokenLines) do
			-- Find line label
			local lineLabel = lineLabels[lineNumber]
			if not lineLabel then
				local newLabel = Instance.new("TextLabel")
				newLabel.Name = "Line_" .. lineNumber
				newLabel.RichText = true
				newLabel.BackgroundTransparency = 1
				newLabel.Text = ""
				newLabel.TextXAlignment = Enum.TextXAlignment.Left
				newLabel.TextYAlignment = Enum.TextYAlignment.Top
				newLabel.Parent = lineFolder
				lineLabels[lineNumber] = newLabel
				lineLabel = newLabel
			end

			-- Align line label
			lineLabel.TextColor3 = TokenColors["iden"]
			lineLabel.Font = textObject.Font
			lineLabel.TextSize = textObject.TextSize
			lineLabel.Size = UDim2.new(1, 0, 0, math.ceil(textHeight))
			lineLabel.Position = UDim2.fromScale(0, textHeight * (lineNumber - 1) / textObject.AbsoluteSize.Y)

			-- If multiline token, then set line & move to next
			if l > 1 then
				if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
					-- Set line
					lineLabels[lineNumber].Text = table.concat(richText)
				end
				-- Move to next line
				lineNumber += 1
				index = 0
				table.clear(richText)
			end

			-- If changed, add token to line
			if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
				index += 1
				-- Only add RichText tags when the color is non-default and the characters are non-whitespace
				if Color ~= TokenColors["iden"] and string.find(line, "[%S%C]") then
					richText[index] = string.format(ColorFormatter[Color], line)
				else
					richText[index] = line
				end
			end
		end
	end

	-- Set final line
	if richText[1] and lineLabels[lineNumber] then
		lineLabels[lineNumber].Text = table.concat(richText)
	end

	-- Clear unused line labels
	for l=lineNumber+1, #lineLabels do
		if lineLabels[l].Text == "" then continue end
		lineLabels[l].Text = ""
	end

	return cleanup
end

function Highlighter.refresh(): ()
	-- Rehighlight existing labels using latest colors
	for textObject, data in pairs(LastData) do
		for _, lineLabel in ipairs(data.Labels) do
			lineLabel.TextColor3 = TokenColors["iden"]
		end

		Highlighter.highlight({
			textObject = textObject,
			forceUpdate = true,
			src = data.Text,
			lexer = data.Lexer,
			customLang = data.CustomLang,
		})
	end
end

function Highlighter.setTokenColors(colors: HighlighterColors)
	for token, color in colors do
		TokenColors[token] = color
		ColorFormatter[color] = string.format(
			'<font color="#%.2x%.2x%.2x">',
			color.R * 255,
			color.G * 255,
			color.B * 255
		) .. "%s</font>"
	end

	Highlighter.refresh()
end
Highlighter.setTokenColors(TokenColors)

return Highlighter.highlight
end;
};
G2L_MODULES[G2L["c2"]] = {
Closure = function()
    local script = G2L["c2"];--[=[
	Lexical scanner for creating a sequence of tokens from Lua source code.
	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight
	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------- Original Penlight lexer author
		ryanjmulder <https://github.com/ryanjmulder> ------------- Penlight lexer contributer
		mpeterv <https://github.com/mpeterv> --------------------- Penlight lexer contributer
		Tieske <https://github.com/Tieske> ----------------------- Penlight lexer contributer
		boatbomber <https://github.com/boatbomber> --------------- Roblox port, added builtin token,
		                                                           added patterns for incomplete syntax, bug fixes,
		                                                           behavior changes, token optimization, thread optimization
		                                                           Added lexer.navigator() for non-sequential reads
		Sleitnick <https://github.com/Sleitnick> ----------------- Roblox optimizations
		howmanysmall <https://github.com/howmanysmall> ----------- Lua + Roblox optimizations

	List of possible tokens:
		- iden
		- keyword
		- builtin
		- string
		- number
		- comment
		- operator
--]=]

local lexer = {}

local Prefix, Suffix, Cleaner = "^[%c%s]*", "[%c%s]*", "[%c%s]+"
local UNICODE = "[%z\x01-\x7F\xC2-\xF4][\x80-\xBF]+"
local NUMBER_A = "0[xX][%da-fA-F_]+"
local NUMBER_B = "0[bB][01_]+"
local NUMBER_C = "%d+%.?%d*[eE][%+%-]?%d+"
local NUMBER_D = "%d+[%._]?[%d_eE]*"
local OPERATORS = "[:;<>/~%*%(%)%-={},%.#%^%+%%]+"
local BRACKETS = "[%[%]]+" -- needs to be separate pattern from other operators or it'll mess up multiline strings
local IDEN = "[%a_][%w_]*"
local STRING_EMPTY = "(['\"])%1" --Empty String
local STRING_PLAIN = "(['\"])[^\n]-([^\\]%1)" --TODO: Handle escaping escapes
local STRING_INTER = "`[^\n]-`"
local STRING_INCOMP_A = "(['\"]).-\n" --Incompleted String with next line
local STRING_INCOMP_B = "(['\"])[^\n]*" --Incompleted String without next line
local STRING_MULTI = "%[(=*)%[.-%]%1%]" --Multiline-String
local STRING_MULTI_INCOMP = "%[=*%[.-.*" --Incompleted Multiline-String
local COMMENT_MULTI = "%-%-%[(=*)%[.-%]%1%]" --Completed Multiline-Comment
local COMMENT_MULTI_INCOMP = "%-%-%[=*%[.-.*" --Incompleted Multiline-Comment
local COMMENT_PLAIN = "%-%-.-\n" --Completed Singleline-Comment
local COMMENT_INCOMP = "%-%-.*" --Incompleted Singleline-Comment
-- local TYPED_VAR = ":%s*([%w%?%| \t]+%s*)" --Typed variable, parameter, function

local lang = require(script.language)
local lua_keyword = lang.keyword
local lua_builtin = lang.builtin
local lua_libraries = lang.libraries

lexer.language = lang

local lua_matches = {
	-- Indentifiers
	{ Prefix .. IDEN .. Suffix, "var" },

	-- Numbers
	{ Prefix .. NUMBER_A .. Suffix, "number" },
	{ Prefix .. NUMBER_B .. Suffix, "number" },
	{ Prefix .. NUMBER_C .. Suffix, "number" },
	{ Prefix .. NUMBER_D .. Suffix, "number" },

	-- Strings
	{ Prefix .. STRING_EMPTY .. Suffix, "string" },
	{ Prefix .. STRING_PLAIN .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_A .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_B .. Suffix, "string" },
	{ Prefix .. STRING_MULTI .. Suffix, "string" },
	{ Prefix .. STRING_MULTI_INCOMP .. Suffix, "string" },
	{ Prefix .. STRING_INTER .. Suffix, "string_inter" },

	-- Comments
	{ Prefix .. COMMENT_MULTI .. Suffix, "comment" },
	{ Prefix .. COMMENT_MULTI_INCOMP .. Suffix, "comment" },
	{ Prefix .. COMMENT_PLAIN .. Suffix, "comment" },
	{ Prefix .. COMMENT_INCOMP .. Suffix, "comment" },

	-- Operators
	{ Prefix .. OPERATORS .. Suffix, "operator" },
	{ Prefix .. BRACKETS .. Suffix, "operator" },

	-- Unicode
	{ Prefix .. UNICODE .. Suffix, "iden" },

	-- Unknown
	{ "^.", "iden" },
}

-- To reduce the amount of table indexing during lexing, we separate the matches now
local PATTERNS, TOKENS = {}, {}
for i, m in lua_matches do
	PATTERNS[i] = m[1]
	TOKENS[i] = m[2]
end

--- Create a plain token iterator from a string.
-- @tparam string s a string.

function lexer.scan(s: string)
	local index = 1
	local size = #s
	local previousContent1, previousContent2, previousContent3, previousToken = "", "", "", ""

	local thread = coroutine.create(function()
		while index <= size do
			local matched = false
			for tokenType, pattern in ipairs(PATTERNS) do
				-- Find match
				local start, finish = string.find(s, pattern, index)
				if start == nil then continue end

				-- Move head
				index = finish + 1
				matched = true

				-- Gather results
				local content = string.sub(s, start, finish)
				local rawToken = TOKENS[tokenType]
				local processedToken = rawToken

				-- Process token
				if rawToken == "var" then
					-- Since we merge spaces into the tok, we need to remove them
					-- in order to check the actual word it contains
					local cleanContent = string.gsub(content, Cleaner, "")

					if lua_keyword[cleanContent] then
						processedToken = "keyword"
					elseif lua_builtin[cleanContent] then
						processedToken = "builtin"
					elseif string.find(previousContent1, "%.[%s%c]*$") and previousToken ~= "comment" then
						-- The previous was a . so we need to special case indexing things
						local parent = string.gsub(previousContent2, Cleaner, "")
						local lib = lua_libraries[parent]
						if lib and lib[cleanContent] and not string.find(previousContent3, "%.[%s%c]*$") then
							-- Indexing a builtin lib with existing item, treat as a builtin
							processedToken = "builtin"
						else
							-- Indexing a non builtin, can't be treated as a keyword/builtin
							processedToken = "iden"
						end
						-- print("indexing",parent,"with",cleanTok,"as",t2)
					else
						processedToken = "iden"
					end
				elseif rawToken == "string_inter" then
					if not string.find(content, "[^\\]{") then
						-- This inter string doesnt actually have any inters
						processedToken = "string"
					else
						-- We're gonna do our own yields, so the main loop won't need to
						-- Our yields will be a mix of string and whatever is inside the inters
						processedToken = nil

						local isString = true
						local subIndex = 1
						local subSize = #content
						while subIndex <= subSize do
							-- Find next brace
							local subStart, subFinish = string.find(content, "^.-[^\\][{}]", subIndex)
							if subStart == nil then
								-- No more braces, all string
								coroutine.yield("string", string.sub(content, subIndex))
								break
							end

							if isString then
								-- We are currently a string
								subIndex = subFinish + 1
								coroutine.yield("string", string.sub(content, subStart, subFinish))

								-- This brace opens code
								isString = false
							else
								-- We are currently in code
								subIndex = subFinish
								local subContent = string.sub(content, subStart, subFinish-1)
								for innerToken, innerContent in lexer.scan(subContent) do
									coroutine.yield(innerToken, innerContent)
								end

								-- This brace opens string/closes code
								isString = true
							end
						end
					end
				end

				-- Record last 3 tokens for the indexing context check
				previousContent3 = previousContent2
				previousContent2 = previousContent1
				previousContent1 = content
				previousToken = processedToken or rawToken
				if processedToken then
					coroutine.yield(processedToken, content)
				end
				break
			end

			-- No matches found
			if not matched then
				return
			end
		end

		-- Completed the scan
		return
	end)

	return function()
		if coroutine.status(thread) == "dead" then
			return
		end

		local success, token, content = coroutine.resume(thread)
		if success and token then
			return token, content
		end

		return
	end
end

function lexer.navigator()
	local nav = {
		Source = "",
		TokenCache = table.create(50),

		_RealIndex = 0,
		_UserIndex = 0,
		_ScanThread = nil,
	}

	function nav:Destroy()
		self.Source = nil
		self._RealIndex = nil
		self._UserIndex = nil
		self.TokenCache = nil
		self._ScanThread = nil
	end

	function nav:SetSource(SourceString)
		self.Source = SourceString

		self._RealIndex = 0
		self._UserIndex = 0
		table.clear(self.TokenCache)

		self._ScanThread = coroutine.create(function()
			for Token, Src in lexer.scan(self.Source) do
				self._RealIndex += 1
				self.TokenCache[self._RealIndex] = { Token, Src }
				coroutine.yield(Token, Src)
			end
		end)
	end

	function nav.Next()
		nav._UserIndex += 1

		if nav._RealIndex >= nav._UserIndex then
			-- Already scanned, return cached
			return table.unpack(nav.TokenCache[nav._UserIndex])
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local success, token, src = coroutine.resume(nav._ScanThread)
				if success and token then
					-- Scanned new data
					return token, src
				else
					-- Lex completed
					return
				end
			end
		end
	end

	function nav.Peek(PeekAmount)
		local GoalIndex = nav._UserIndex + PeekAmount

		if nav._RealIndex >= GoalIndex then
			-- Already scanned, return cached
			if GoalIndex > 0 then
				return table.unpack(nav.TokenCache[GoalIndex])
			else
				-- Invalid peek
				return
			end
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local IterationsAway = GoalIndex - nav._RealIndex

				local success, token, src = nil, nil, nil

				for _ = 1, IterationsAway do
					success, token, src = coroutine.resume(nav._ScanThread)
					if not (success or token) then
						-- Lex completed
						break
					end
				end

				return token, src
			end
		end
	end

	return nav
end

return lexer

end;
};
G2L_MODULES[G2L["c3"]] = {
Closure = function()
    local script = G2L["c3"];local language = {
	keyword = {
		["and"] = "keyword",
		["break"] = "keyword",
		["continue"] = "keyword",
		["do"] = "keyword",
		["else"] = "keyword",
		["elseif"] = "keyword",
		["end"] = "keyword",
		["export"] = "keyword",
		["false"] = "keyword",
		["for"] = "keyword",
		["function"] = "keyword",
		["if"] = "keyword",
		["in"] = "keyword",
		["local"] = "keyword",
		["nil"] = "keyword",
		["not"] = "keyword",
		["or"] = "keyword",
		["repeat"] = "keyword",
		["return"] = "keyword",
		["self"] = "keyword",
		["then"] = "keyword",
		["true"] = "keyword",
		["type"] = "keyword",
		["typeof"] = "keyword",
		["until"] = "keyword",
		["while"] = "keyword",
	},

	builtin = {
		-- Luau Functions
		["assert"] = "function",
		["error"] = "function",
		["getfenv"] = "function",
		["getmetatable"] = "function",
		["ipairs"] = "function",
		["loadstring"] = "function",
		["newproxy"] = "function",
		["next"] = "function",
		["pairs"] = "function",
		["pcall"] = "function",
		["print"] = "function",
		["rawequal"] = "function",
		["rawget"] = "function",
		["rawlen"] = "function",
		["rawset"] = "function",
		["select"] = "function",
		["setfenv"] = "function",
		["setmetatable"] = "function",
		["tonumber"] = "function",
		["tostring"] = "function",
		["unpack"] = "function",
		["xpcall"] = "function",

		-- Luau Functions (Deprecated)
		["collectgarbage"] = "function",

		-- Luau Variables
		["_G"] = "table",
		["_VERSION"] = "string",

		-- Luau Tables
		["bit32"] = "table",
		["coroutine"] = "table",
		["debug"] = "table",
		["math"] = "table",
		["os"] = "table",
		["string"] = "table",
		["table"] = "table",
		["utf8"] = "table",

		-- Roblox Functions
		["DebuggerManager"] = "function",
		["delay"] = "function",
		["gcinfo"] = "function",
		["PluginManager"] = "function",
		["require"] = "function",
		["settings"] = "function",
		["spawn"] = "function",
		["tick"] = "function",
		["time"] = "function",
		["UserSettings"] = "function",
		["wait"] = "function",
		["warn"] = "function",

		-- Roblox Functions (Deprecated)
		["Delay"] = "function",
		["ElapsedTime"] = "function",
		["elapsedTime"] = "function",
		["printidentity"] = "function",
		["Spawn"] = "function",
		["Stats"] = "function",
		["stats"] = "function",
		["Version"] = "function",
		["version"] = "function",
		["Wait"] = "function",
		["ypcall"] = "function",

		-- Roblox Variables
		["game"] = "Instance",
		["plugin"] = "Instance",
		["script"] = "Instance",
		["shared"] = "Instance",
		["workspace"] = "Instance",

		-- Roblox Variables (Deprecated)
		["Game"] = "Instance",
		["Workspace"] = "Instance",

		-- Roblox Tables
		["Axes"] = "table",
		["BrickColor"] = "table",
		["CatalogSearchParams"] = "table",
		["CFrame"] = "table",
		["Color3"] = "table",
		["ColorSequence"] = "table",
		["ColorSequenceKeypoint"] = "table",
		["DateTime"] = "table",
		["DockWidgetPluginGuiInfo"] = "table",
		["Enum"] = "table",
		["Faces"] = "table",
		["FloatCurveKey"] = "table",
		["Font"] = "table",
		["Instance"] = "table",
		["NumberRange"] = "table",
		["NumberSequence"] = "table",
		["NumberSequenceKeypoint"] = "table",
		["OverlapParams"] = "table",
		["PathWaypoint"] = "table",
		["PhysicalProperties"] = "table",
		["Random"] = "table",
		["Ray"] = "table",
		["RaycastParams"] = "table",
		["Rect"] = "table",
		["Region3"] = "table",
		["Region3int16"] = "table",
		["RotationCurveKey"] = "table",
		["task"] = "table",
		["TweenInfo"] = "table",
		["UDim"] = "table",
		["UDim2"] = "table",
		["Vector2"] = "table",
		["Vector2int16"] = "table",
		["Vector3"] = "table",
		["Vector3int16"] = "table",
	},

	libraries = {

		-- Luau Libraries
		bit32 = {
			arshift = "function",
			band = "function",
			bnot = "function",
			bor = "function",
			btest = "function",
			bxor = "function",
			countlz = "function",
			countrz = "function",
			extract = "function",
			lrotate = "function",
			lshift = "function",
			replace = "function",
			rrotate = "function",
			rshift = "function",
		},

		coroutine = {
			close = "function",
			create = "function",
			isyieldable = "function",
			resume = "function",
			running = "function",
			status = "function",
			wrap = "function",
			yield = "function",
		},

		debug = {
			dumpheap = "function",
			info = "function",
			loadmodule = "function",
			profilebegin = "function",
			profileend = "function",
			resetmemorycategory = "function",
			setmemorycategory = "function",
			traceback = "function",
		},

		math = {
			abs = "function",
			acos = "function",
			asin = "function",
			atan2 = "function",
			atan = "function",
			ceil = "function",
			clamp = "function",
			cos = "function",
			cosh = "function",
			deg = "function",
			exp = "function",
			floor = "function",
			fmod = "function",
			frexp = "function",
			ldexp = "function",
			log10 = "function",
			log = "function",
			max = "function",
			min = "function",
			modf = "function",
			noise = "function",
			pow = "function",
			rad = "function",
			random = "function",
			randomseed = "function",
			round = "function",
			sign = "function",
			sin = "function",
			sinh = "function",
			sqrt = "function",
			tan = "function",
			tanh = "function",

			huge = "number",
			pi = "number",
		},

		os = {
			clock = "function",
			date = "function",
			difftime = "function",
			time = "function",
		},

		string = {
			byte = "function",
			char = "function",
			find = "function",
			format = "function",
			gmatch = "function",
			gsub = "function",
			len = "function",
			lower = "function",
			match = "function",
			pack = "function",
			packsize = "function",
			rep = "function",
			reverse = "function",
			split = "function",
			sub = "function",
			unpack = "function",
			upper = "function",
		},

		table = {
			clear = "function",
			clone = "function",
			concat = "function",
			create = "function",
			find = "function",
			foreach = "function",
			foreachi = "function",
			freeze = "function",
			getn = "function",
			insert = "function",
			isfrozen = "function",
			maxn = "function",
			move = "function",
			pack = "function",
			remove = "function",
			sort = "function",
			unpack = "function",
		},

		utf8 = {
			char = "function",
			codepoint = "function",
			codes = "function",
			graphemes = "function",
			len = "function",
			nfcnormalize = "function",
			nfdnormalize = "function",
			offset = "function",

			charpattern = "string",
		},

		-- Roblox Libraries
		Axes = {
			new = "function",
		},

		BrickColor = {
			Black = "function",
			Blue = "function",
			DarkGray = "function",
			Gray = "function",
			Green = "function",
			new = "function",
			New = "function",
			palette = "function",
			Random = "function",
			random = "function",
			Red = "function",
			White = "function",
			Yellow = "function",
		},

		CatalogSearchParams = {
			new = "function",
		},

		CFrame = {
			Angles = "function",
			fromAxisAngle = "function",
			fromEulerAngles = "function",
			fromEulerAnglesXYZ = "function",
			fromEulerAnglesYXZ = "function",
			fromMatrix = "function",
			fromOrientation = "function",
			lookAt = "function",
			new = "function",

			identity = "CFrame",
		},

		Color3 = {
			fromHex = "function",
			fromHSV = "function",
			fromRGB = "function",
			new = "function",
			toHSV = "function",
		},

		ColorSequence = {
			new = "function",
		},

		ColorSequenceKeypoint = {
			new = "function",
		},

		DateTime = {
			fromIsoDate = "function",
			fromLocalTime = "function",
			fromUniversalTime = "function",
			fromUnixTimestamp = "function",
			fromUnixTimestampMillis = "function",
			now = "function",
		},

		DockWidgetPluginGuiInfo = {
			new = "function",
		},

		Enum = {},

		Faces = {
			new = "function",
		},

		FloatCurveKey = {
			new = "function",
		},

		Font = {
			fromEnum = "function",
			fromId = "function",
			fromName = "function",
			new = "function",
		},

		Instance = {
			new = "function",
		},

		NumberRange = {
			new = "function",
		},

		NumberSequence = {
			new = "function",
		},

		NumberSequenceKeypoint = {
			new = "function",
		},

		OverlapParams = {
			new = "function",
		},

		PathWaypoint = {
			new = "function",
		},

		PhysicalProperties = {
			new = "function",
		},

		Random = {
			new = "function",
		},

		Ray = {
			new = "function",
		},

		RaycastParams = {
			new = "function",
		},

		Rect = {
			new = "function",
		},

		Region3 = {
			new = "function",
		},

		Region3int16 = {
			new = "function",
		},

		RotationCurveKey = {
			new = "function",
		},

		task = {
			cancel = "function",
			defer = "function",
			delay = "function",
			desynchronize = "function",
			spawn = "function",
			synchronize = "function",
			wait = "function",
		},

		TweenInfo = {
			new = "function",
		},

		UDim = {
			new = "function",
		},

		UDim2 = {
			fromOffset = "function",
			fromScale = "function",
			new = "function",
		},

		Vector2 = {
			new = "function",

			one = "Vector2",
			xAxis = "Vector2",
			yAxis = "Vector2",
			zero = "Vector2",
		},

		Vector2int16 = {
			new = "function",
		},

		Vector3 = {
			fromAxis = "function",
			FromAxis = "function",
			fromNormalId = "function",
			FromNormalId = "function",
			new = "function",

			one = "Vector3",
			xAxis = "Vector3",
			yAxis = "Vector3",
			zAxis = "Vector3",
			zero = "Vector3",
		},

		Vector3int16 = {
			new = "function",
		},
	},
}

-- Filling up language.libraries.Enum table
local enumLibraryTable = language.libraries.Enum

for _, enum in ipairs(Enum:GetEnums()) do
	--TODO: Remove tostring from here once there is a better way to get the name of an Enum
	enumLibraryTable[tostring(enum)] = "Enum"
end

return language

end;
};
-- StarterGui.AAGGXENOSS.Frame.TopBar.X.LocalScript
local function C_5()
local script = G2L["5"];
	script.Parent.MouseButton1Click:Connect(function()
	
		script.Parent.Parent.Parent.Parent:Destroy()
		
	end)
end;
task.spawn(C_5);
-- StarterGui.AAGGXENOSS.Frame.TopBar.X.2
local function C_6()
	local script = G2L["6"];
	local textLabel = script.Parent
	local originalColor = textLabel.ImageColor3

	textLabel.MouseEnter:Connect(function()
		local goal = {ImageColor3 = Color3.fromRGB(255, 0, 0)}
		game:GetService("TweenService"):Create(textLabel, TweenInfo.new(0.5), goal):Play()
	end)

	textLabel.MouseLeave:Connect(function()
		local goal = {ImageColor3 = originalColor}
		game:GetService("TweenService"):Create(textLabel, TweenInfo.new(0.5), goal):Play()
	end)

end;
task.spawn(C_6);
-- StarterGui.AAGGXENOSS.Frame.TopBar.Name.LocalScript
local function C_9()
	local script = G2L["9"];
	local TweenService = game:GetService("TweenService")
	local textLabel = script.Parent

	local redColor = Color3.fromRGB(60, 255, 0)
	local normalColor = textLabel.TextColor3

	local tweenInfo = TweenInfo.new(
		1,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out,
		0,
		false,
		0
	)

	local function changeColorToRedAndBack()
		local tweenToRed = TweenService:Create(textLabel, tweenInfo, {TextColor3 = redColor})
		tweenToRed:Play()

		tweenToRed.Completed:Connect(function()
			local tweenBack = TweenService:Create(textLabel, tweenInfo, {TextColor3 = normalColor})
			tweenBack:Play()
		end)
	end

	changeColorToRedAndBack()

end;
task.spawn(C_9);
-- StarterGui.AAGGXENOSS.Frame.TopBar.Name.2
local function C_a()
	local script = G2L["a"];
	local textLabel = script.Parent
	local originalColor = textLabel.TextColor3

	textLabel.MouseEnter:Connect(function()
		local goal = {TextColor3 = Color3.fromRGB(60, 255, 0)}
		game:GetService("TweenService"):Create(textLabel, TweenInfo.new(0.5), goal):Play()
	end)

	textLabel.MouseLeave:Connect(function()
		local goal = {TextColor3 = originalColor}
		game:GetService("TweenService"):Create(textLabel, TweenInfo.new(0.5), goal):Play()
	end)

end;
task.spawn(C_a);
-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.LocalScript
local function C_d()
	local script = G2L["d"];
	local TweenService = game:GetService("TweenService")
	local textLabel = script.Parent

	local redColor = Color3.fromRGB(255, 0, 0)
	local normalColor = textLabel.TextColor3

	local tweenInfo = TweenInfo.new(
		1,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out,
		0,
		false,
		0
	)

	local function changeColorToRedAndBack()
		local tweenToRed = TweenService:Create(textLabel, tweenInfo, {TextColor3 = redColor})
		tweenToRed:Play()

		tweenToRed.Completed:Connect(function()
			local tweenBack = TweenService:Create(textLabel, tweenInfo, {TextColor3 = normalColor})
			tweenBack:Play()
		end)
	end

	changeColorToRedAndBack()

end;
task.spawn(C_d);
-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.mobile
local function C_e()
	local script = G2L["e"];
	local UserInputService = game:GetService("UserInputService")

	if UserInputService.TouchEnabled then
		script.Parent.Text = "V3 Mobile"
		script.Parent.Position = UDim2.new(0.179, 0, 0, 0)
	else

	end

end;
task.spawn(C_e);
-- StarterGui.AAGGXENOSS.Frame.TopBar.V3.2
local function C_f()
	local script = G2L["f"];
	local textLabel = script.Parent
	local originalColor = textLabel.TextColor3

	textLabel.MouseEnter:Connect(function()
		local goal = {TextColor3 = Color3.fromRGB(255, 0, 0)}
		game:GetService("TweenService"):Create(textLabel, TweenInfo.new(0.5), goal):Play()
	end)

	textLabel.MouseLeave:Connect(function()
		local goal = {TextColor3 = originalColor}
		game:GetService("TweenService"):Create(textLabel, TweenInfo.new(0.5), goal):Play()
	end)

end;
task.spawn(C_f);
-- StarterGui.AAGGXENOSS.Frame.Drag
local function C_10()
	local script = G2L["10"];
	local UserInputService = game:GetService("UserInputService")

	local gui = script.Parent

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	-- Cell drag by ilikelimeclips2
	local gui = script.Parent
	local dragging = false
	local dragInput, dragStart, startPos

	local function updateDrag(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			input.Changed:Connect(function()
				if dragging then
					updateDrag(input)
				end
			end)
		end
	end)

	gui.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

end;
task.spawn(C_10);
-- StarterGui.AAGGXENOSS.Frame.reziserMain
local function C_14()
	local script = G2L["14"];
	local main = script.Parent
	local resizerModule = require(main:WaitForChild("resizerModule", 10))

	resizerModule.makeResizable(main)
end;
task.spawn(C_14);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.Animate
local function C_1b()
	local script = G2L["1b"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_1b);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Infoupdts.Function
local function C_1d()
	local script = G2L["1d"];
	local a = script.Parent.Parent.Parent.CodeHolder.CodeSample

	script.Parent.MouseButton1Click:Connect(function()
		a.Text = [[
-- Welcome to V3!	
-- Made by Kinzin #._.kinzin.
-- Huge thanks to deusferrinho for the UI.
-- 1.4! Read update logs!
-- Report errors on the Discord server.
-- Enjoy playing with remotes!
	]]
	end)
end;
task.spawn(C_1d);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote1.Animate
local function C_21()
	local script = G2L["21"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_21);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote2.Animate
local function C_26()
	local script = G2L["26"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_26);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote3.Animate
local function C_2b()
	local script = G2L["2b"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_2b);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote4.Animate
local function C_30()
	local script = G2L["30"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_30);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote5.Animate
local function C_35()
	local script = G2L["35"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_35);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote6.Animate
local function C_3a()
	local script = G2L["3a"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_3a);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote8.Animate
local function C_3f()
	local script = G2L["3f"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_3f);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote9.Animate
local function C_44()
	local script = G2L["44"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_44);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote10.Animate
local function C_49()
	local script = G2L["49"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_49);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote7.Animate
local function C_4e()
	local script = G2L["4e"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_4e);
-- StarterGui.AAGGXENOSS.Frame.Remotes.Remote11.Animate
local function C_53()
	local script = G2L["53"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_53);
-- StarterGui.AAGGXENOSS.Frame.Remotes.CanvasSize
local function C_56()
	local script = G2L["56"];
	local scrollingFrame = script.Parent
	scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

end;
task.spawn(C_56);
-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.Animate
local function C_60()
	local script = G2L["60"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_60);
-- StarterGui.AAGGXENOSS.Frame.Buttons.Clear.LocalScript
local function C_61()
	local script = G2L["61"];
	script.Parent.MouseButton1Click:Connect(function()
		local remotesFolder = script.Parent.Parent.Parent.Remotes

		local function hideRemoteButtons()
			for _, button in ipairs(remotesFolder:GetChildren()) do
				if button:IsA("TextButton") and (button.Name:lower():find("remote")) then
					button.Visible = false
					button.Text = ""
				end
			end
		end

		hideRemoteButtons()
	end)
end;
task.spawn(C_61);
-- StarterGui.AAGGXENOSS.Frame.Buttons.ClearL.Animate
local function C_68()
	local script = G2L["68"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_68);
-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.Animate
local function C_6f()
	local script = G2L["6f"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_6f);
-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyC.LocalScript
local function C_70()
	local script = G2L["70"];
	local ab = script.Parent.Parent.Parent.CodeHolder.CodeSample
	local c = ab.Text
	script.Parent.MouseButton1Click:Connect(function()
		if setclipboard then
			setclipboard(ab.Text)
			ab.Text = "Copied to clipboard"
			wait(1)
			ab.Text = c
		else
			ab.Text = "Your executer doesn't support clipboard"
			wait(1)
			ab.Text = c
		end
	end)
end;
task.spawn(C_70);
-- StarterGui.AAGGXENOSS.Frame.Buttons.CopyR.Animate
local function C_77()
	local script = G2L["77"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_77);
-- StarterGui.AAGGXENOSS.Frame.Buttons.ExL.Animate
local function C_7e()
	local script = G2L["7e"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_7e);
-- StarterGui.AAGGXENOSS.Frame.Buttons.Run.Animate
local function C_85()
	local script = G2L["85"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_85);
-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.Animate
local function C_8c()
	local script = G2L["8c"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_8c);
-- StarterGui.AAGGXENOSS.Frame.Buttons.RunS.LocalScript
local function C_8d()
	local script = G2L["8d"];
	local ab = script.Parent.Parent.Parent.CodeHolder.CodeSample

	script.Parent.MouseButton1Click:Connect(function()
		local code = ab.Text

		if code ~= "" then
			local success, result = pcall(function()
				local func = loadstring(code)
				if func then
					func()
				end
			end)

			if not success then
				print("StellySpy Error: " .. result)
			end
		else
		end
	end)
end;
task.spawn(C_8d);
-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.Animate
local function C_94()
	local script = G2L["94"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_94);
-- StarterGui.AAGGXENOSS.Frame.Buttons.dc.LocalScript
local function C_95()
	local script = G2L["95"];
	local ab = script.Parent.Parent.Parent.CodeHolder.CodeSample
	local c = "https://discord.gg/CkqE2W2Vy6"
	script.Parent.MouseButton1Click:Connect(function()
		if setclipboard then
			setclipboard(c)
			ab.Text = "Copied to clipboard!"
		else
			ab.Text = "Your executer doesn't support clipboard"
		end
	end)
end;
task.spawn(C_95);
-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.Animate
local function C_9c()
	local script = G2L["9c"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_9c);
-- StarterGui.AAGGXENOSS.Frame.Buttons.yt.LocalScript
local function C_9d()
	local script = G2L["9d"];
	local ab = script.Parent.Parent.Parent.CodeHolder.CodeSample
	local c = "https://www.youtube.com/@L4TIC1NIO"
	script.Parent.MouseButton1Click:Connect(function()
		if setclipboard then
			setclipboard(c)
			ab.Text = "Copied to clipboard!"
		else
			ab.Text = "Your executer doesn't support clipboard"
		end
	end)
end;
task.spawn(C_9d);
-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.Function
local function C_a3()
	local script = G2L["a3"];
	script.Parent.MouseButton1Click:Connect(function()
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local function fireAllRemotes(parent)
			for _, object in pairs(parent:GetChildren()) do
				if object:IsA("RemoteEvent") then
					pcall(function()
						object:FireServer()
						print("Firing RemoteEvent:", object.Name)
					end)
				elseif object:IsA("RemoteFunction") then
					pcall(function()
						object:InvokeServer()
						print("Firing RemoteFunction:", object.Name)
					end)
				end

				if object:IsA("Folder") then
					fireAllRemotes(object)
				end
			end
		end

		local function fireRemotesInAllAreas()
			fireAllRemotes(game.ReplicatedStorage)
			fireAllRemotes(game.Players.LocalPlayer:WaitForChild("PlayerGui"))
			fireAllRemotes(game.Players.LocalPlayer:WaitForChild("PlayerScripts"))
			fireAllRemotes(game.Workspace)
			fireAllRemotes(game.Chat)
		end

		fireRemotesInAllAreas()
	end)

end;
task.spawn(C_a3);
-- StarterGui.AAGGXENOSS.Frame.Buttons.FireALL.Animate
local function C_a6()
	local script = G2L["a6"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_a6);
-- StarterGui.AAGGXENOSS.Frame.Buttons.Spam.Animate
local function C_ad()
	local script = G2L["ad"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_ad);
-- StarterGui.AAGGXENOSS.Frame.Buttons.UpList.Animate
local function C_b4()
	local script = G2L["b4"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_b4);
-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.Animate
local function C_bb()
	local script = G2L["bb"];
	local tweenService = game:GetService("TweenService")

	local button = script.Parent
	local border = button:WaitForChild("Border", 10)

	local uistroke = button:FindFirstChildWhichIsA("UIStroke")

	button.MouseEnter:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(uistroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(1, 0, 1, 0),
		}):Play()

		wait(2)

		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(border, TweenInfo.new(0.05, Enum.EasingStyle.Exponential), {
			Size = UDim2.new(0.05, 0, 1, 0),
		}):Play()
	end)

end;
task.spawn(C_bb);
-- StarterGui.AAGGXENOSS.Frame.Buttons.UpLogs.LocalScript
local function C_bc()
	local script = G2L["bc"];
	local ab = script.Parent.Parent.Parent.CodeHolder.CodeSample
	script.Parent.MouseButton1Click:Connect(function()
		ab.Text = [[Updates Logs:
	
(22/03/25) Version 1.4:
	
- V3.2 Coming soon. ðŸ‘€
- Added a new highlight feature.
- Optimized the script for better performance.
- Expanded support for more executors.
- UI improvements and adjustments.
- Removed the "Loadstrings" buttons (they werenâ€™t necessary).
- Removed the minimize button (a new one will be added in the next update).
	
Stay tuned for more updates coming soon!
	]]
	end)
end;
task.spawn(C_bc);
-- StarterGui.AAGGXENOSS.Frame.CDrag
local function C_bd()
	local script = G2L["bd"];
	-- Cell drag by ilikelimeclips2
	local gui = script.Parent
	local dragging = false
	local dragInput, dragStart, startPos

	local function updateDrag(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			input.Changed:Connect(function()
				if dragging then
					updateDrag(input)
				end
			end)
		end
	end)

	gui.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

end;
task.spawn(C_bd);
-- StarterGui.AAGGXENOSS.Frame.Main
local function C_be()
	local script = G2L["be"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Player = game.Players.LocalPlayer
	local executedRemotes, buttonList = {}, {}
	local textbox, buttons = script.Parent.CodeHolder.CodeSample, script.Parent.Remotes
	local selectedRemote, Clicked = nil, false

	local function getFunctionDetails(remote)
		if remote:IsA("RemoteFunction") then
			return "RemoteFunction", "Expected return type (custom)", "InvokeServer"
		elseif remote:IsA("RemoteEvent") then
			return "RemoteEvent", "No return value", "FireServer"
		end
	end

	local function getFullPath(instance)
		if instance == game then return "game" end
		if instance.Parent == game then return string.format("game:GetService(\"%s\")", instance.Name) end
		if instance.Parent == Player then return "game:GetService(\"Players\").LocalPlayer." .. instance.Name end
		return getFullPath(instance.Parent) .. "[\"" .. instance.Name .. "\"]"
	end

	local function generateCode(remote)
		local type, returnType, method = getFunctionDetails(remote)
		if not type then return "-- Unknown remote type!" end

		local fullPath = getFullPath(remote)
		local exampleUsage = string.format("%s:%s()", fullPath, method)

		return string.format([[-- Remote Name: %s
-- Type: %s
-- Return Type: %s
	
%s]], 
			remote.Name, type, returnType, exampleUsage)
	end

	local function updateButton(remote, button)
		button.Text, button.Visible = remote.Name, true
		button.MouseButton1Click:Connect(function()
			selectedRemote, textbox.Text = remote, generateCode(remote)
		end)
	end

	local function processRemote(remote)
		if executedRemotes[remote] then return end
		executedRemotes[remote] = true

		local button = buttons.Remote1:Clone()
		button.Name = "Remote" .. (#buttonList + 1)
		button.Parent = buttons
		table.insert(buttonList, button)
		updateButton(remote, button)
	end

	local function monitorRemotes()
		local function checkDescendant(descendant)
			if descendant:IsA("RemoteEvent") or descendant:IsA("RemoteFunction") then processRemote(descendant) end
		end

		for _, service in ipairs({ReplicatedStorage, Player, Player.Backpack, Player.PlayerGui, Player.PlayerScripts, game.TextChatService}) do
			for _, remote in ipairs(service:GetDescendants()) do checkDescendant(remote) end
			service.DescendantAdded:Connect(checkDescendant)
		end
	end

	local function handleAction(action)
		if not selectedRemote then textbox.Text = "No remote selected!" return end

		if action == "run" then
			selectedRemote[selectedRemote:IsA("RemoteEvent") and "FireServer" or "InvokeServer"](selectedRemote)
			print(selectedRemote.Name .. " Fired!")
		elseif action == "duplicate" then
			selectedRemote:Clone().Parent = ReplicatedStorage
		elseif action == "exclude" then
			for _, button in ipairs(buttonList) do
				if button.Text == selectedRemote.Name then button.Visible = false break end
			end
		elseif action == "delete" then
			selectedRemote:Destroy()
			textbox.Text = "Remote Deleted! (Use 'Clear Log' to remove from the list)"
		elseif action == "spam" then
	script.Parent.Buttons.Spam.TextLabel.Text = "Spam"
			Clicked = not Clicked
			while Clicked do
				script.Parent.Buttons.Spam.TextLabel.Text = "Stop Spamming"
				selectedRemote[selectedRemote:IsA("RemoteEvent") and "FireServer" or "InvokeServer"](selectedRemote)
				wait()
			end
			while not Clicked do
				script.Parent.Buttons.Spam.TextLabel.Text = "Spam"
				wait()
			end
		elseif action == "loadstring" then
			selectedRemote[selectedRemote:IsA("RemoteEvent") and "FireServer" or "InvokeServer"](selectedRemote, "require(16920033857)(" .. Player.Name .. ")")
		elseif action == "list" then
			monitorRemotes()
		end
	end

	monitorRemotes()

	for name, action in pairs({Run = "run", CopyR = "duplicate", ClearL = "exclude", ExL = "delete", Spam = "spam", UpList = "list"}) do
		script.Parent.Buttons[name].MouseButton1Click:Connect(function() handleAction(action) end)
	end

	warn("{------------------------------}")
	warn("{                              }")
	warn("{      Made by ._.kinzin       }")
	warn("{                              }")
	warn("{------------------------------}")

end;
task.spawn(C_be);
-- StarterGui.AAGGXENOSS.Frame.Name
local function C_c0()
	local script = G2L["c0"];
	local function SetName(length)
		local charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
		local name = ""

		for i = 1, length do
			local randomIndex = math.random(1, #charset)
			name = name .. charset:sub(randomIndex, randomIndex)
		end

		return name
	end

	script.Parent.Name = SetName(40)

end;
task.spawn(C_c0);
-- StarterGui.AAGGXENOSS.Frame.Syntax ~ client
local function C_c4()
	local script = G2L["c4"];
	local syntaxmodule = require(script.Parent.Syntax)

	syntaxmodule(script.Parent.CodeHolder.CodeSample)
end;
task.spawn(C_c4);
-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.Anim
local function C_c9()
	local script = G2L["c9"];
	local textBox = script.Parent
	local playerName = game.Players.LocalPlayer.DisplayName
	local fullText = "Welcome " .. playerName .. "!"
	local currentText = ""
	local Load = "Loaded!"
	local te = ""
	for i = 1, #fullText do
		te = te .. Load:sub(i, i)
		textBox.Text = te
		wait(0.09)
	end
	wait(3)
	if textBox.Text ~= "Loaded!" then

	else
		for i = 1, #fullText do
			currentText = currentText .. fullText:sub(i, i)
			textBox.Text = currentText
			wait(0.1)
		end
	end
end;
task.spawn(C_c9);
-- StarterGui.AAGGXENOSS.Frame.CodeHolder.CodeSample.Resize
local function C_cb()
	local script = G2L["cb"];
	local textBox = script.Parent

	local function ajustarTamanho()
		local larguraFinal = math.max(1.003 * textBox.Parent.AbsoluteSize.X, textBox.TextBounds.X)
		local alturaFinal = math.max(1.036 * textBox.Parent.AbsoluteSize.Y, textBox.TextBounds.Y)

		textBox.Size = UDim2.new(0, larguraFinal, 0, alturaFinal)
	end

	textBox:GetPropertyChangedSignal("Text"):Connect(ajustarTamanho)
	ajustarTamanho()

end;
task.spawn(C_cb);
-- StarterGui.AAGGXENOSS.Client.SetCore
local function C_ce()
	local script = G2L["ce"];
	local screenGui = script.Parent.Parent
	local CoreGui = game:GetService("CoreGui")

	screenGui.Parent = CoreGui

end;
task.spawn(C_ce);
-- StarterGui.AAGGXENOSS.Client.Name
local function C_cf()
	local script = G2L["cf"];
	local function SetName(length)
		local charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
		local name = ""

		for i = 1, length do
			local randomIndex = math.random(1, #charset)
			name = name .. charset:sub(randomIndex, randomIndex)
		end

		return name
	end

	script.Parent.Parent.Name = SetName(999)
	script.Name = SetName(90)


end;
task.spawn(C_cf);

return G2L["1"], require;
