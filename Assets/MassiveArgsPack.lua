-- You known what else is massive?
-- Yes that right Low Taper Fade
local args = {
		{},
		{true},
		{false},
		{0},
		{""},
		{"test"},
		{game.Players.LocalPlayer},
		{{foo = "bar"}},
		{game.Players.LocalPlayer, "hello", 123},
		{1},
		{42},
		{-1},
		{67},
		{math.huge},
		{math.pi},
		{math.random()},
		{math.random(0, 100)},
		{math.floor(3.7)},
		{math.ceil(3.3)},
		{0.0001},
		{-9999},
		{""},
		{"a"},
		{" "},
		{"\n"},
		{"\t"},
		{"test string"},
		{"hello world"},
		{"special chars !@#$%^&*()"},
		{"123456"},
		{"true"},
		{"false"},
		{"nil"},
		{"null"},
		{"undefined"},
		{"function"},
		{"table"},
		{"userdata"},
		{"instance"},
		{"Player"},
		{"Enemy"},
		{"Friend"},
		{"Admin"},
		{"Moderator"},
		{"Script"},
		{"Test123"},
		{"some_long_string_with_multiple_words_and_numbers_1234567890"},
		{{}},
		{{1, 2, 3}},
		{{a=1, b=2}},
		{{foo = {bar = "baz"}}},
		{{[1] = "one", [2] = "two"}},
		{{true, false, true}},
		{{math.pi, math.huge}},
		{{nil}},
		{{game}},
		{{game.Players}},
		{{game.Workspace}},
		{{game.Lighting}},
		{{game.Players.LocalPlayer}},
		{{game.Players.LocalPlayer.Character}},
		{{game.Players.LocalPlayer.Character.Humanoid}},
		{{workspace}},
		{{Instance.new("Part")}},
		{{Instance.new("Model")}},
		{{Instance.new("Humanoid")}},
		{Instance.new("Part")},
		{Instance.new("Model")},
		{Instance.new("Humanoid")},
		{game.Players.LocalPlayer.Character},
		{game.Players.LocalPlayer.Character.Humanoid},
		{function() return true end},
		{function(x) return x * 2 end},
		{function() print("test") end},
		{function(a,b) return a+b end},
		{function() end},
		{coroutine.create(function() end)},
		{coroutine.running()},
		{true, false},
		{false, true},
		{true, true},
		{false, false},
		{123, "abc"},
		{456, "def"},
		{"string", 789},
		{"mixed", 1, true},
		{"more", {nested = "table"}, 3.14},
		{math.random, "func"},
		{Vector3.new(1,2,3)},
		{Vector3.new(0,0,0)},
		{CFrame.new(0,0,0)},
		{CFrame.new(1,1,1)},
		{UDim.new(0, 50)},
		{UDim2.new(0, 50, 0, 100)},
		{Color3.new(1,0,0)},
		{Color3.fromRGB(255,255,255)},
		{BrickColor.new("Bright red")},
		{Enum.KeyCode.Space},
		{Enum.UserInputType.Keyboard},
		{Enum.Font.Arial},
		{Enum.Material.Wood},
		{Vector2.new(10,20)},
		{Vector2.new(0,0)},
		{Vector2.new(-1,-1)},
		{Vector2.new(100,100)},
		{Region3.new(Vector3.new(0,0,0), Vector3.new(1,1,1))},
		{Ray.new(Vector3.new(0,0,0), Vector3.new(1,0,0))},
		{tick()},
		{os.time()},
		{os.date()},
		{os.clock()},
		{Enum.FormFactor.Custom},
		{Enum.SurfaceType.Smooth},
		{Enum.PartType.Ball},
		{Enum.HumanoidStateType.Running},
		{Enum.BodyPart.Head},
		{Enum.JointType.Motor},
		{Enum.PhysicsPriority.High},
		{Enum.NetworkPriority.Medium},
		{Enum.DamageType.Fire},
		{Enum.ThrottlePriority.Input},
		{Enum.AccessoryType.Hat},
		{Enum.CameraType.Scriptable},
		{Enum.Material.Sand},
		{Enum.Material.Metal},
		{Enum.Material.Glass},
		{Enum.Material.DiamondPlate},
		{Enum.Material.Granite},
		{Enum.Material.Marble},
		{Enum.Material.Concrete},
		{Enum.Material.Asphalt},
		{Enum.Material.WoodPlanks},
		{Enum.Material.Fabric},
		{Enum.Material.LeafyGrass},
		{Enum.Material.SmoothPlastic},
		{Enum.Material.Neon},
		{Enum.Material.Glacier},
		{Enum.Material.Cobblestone},
		{Enum.Material.Basalt},
		{Enum.Material.CrackedLava},
		{Enum.Material.Limestone},
		{Enum.Material.Mud},
		{Enum.Material.Salt},
		{Enum.Material.Pavement},
		{Enum.Material.Rock},
		{Enum.Material.Slate},
		{Enum.Material.Sandstone},
		{Enum.Material.Ceramic},
		{Enum.Material.Brick},
		{Enum.Material.Foil},
		{Enum.Material.Brick},
		{Enum.Material.Fabric},
		{Enum.Material.CorrodedMetal},
		{Enum.Material.Foil},
		{Enum.Material.Glacier},
		{Enum.Material.Ice},
		{Enum.Material.CrackedLava},
		{Enum.Material.LeafyGrass},
		{Enum.Material.Marble},
		{Enum.Material.Mud},
		{Enum.Material.Neon},
		{Enum.Material.Pavement},
		{Enum.Material.Salt},
		{Enum.Material.Sandstone},
		{Enum.Material.Slate},
		{Enum.Material.WoodPlanks},
		{Enum.Material.Glass},
		{Enum.Material.Metal},
		{Enum.Material.Basalt},
		{Enum.Material.Concrete},
		{Enum.Material.Ceramic},
		{Enum.Material.Rock},
		{Enum.Material.Fabric},
		{Enum.Material.CorrodedMetal},
		{Enum.Material.Brick},
		{Enum.Material.Ice},
		{Enum.Material.Foil},
		{Enum.Material.Wood},
		{Enum.Material.SmoothPlastic},
		{Enum.Material.Neon},
		{Enum.Material.Glass},
		{Enum.Material.Metal},
		{Enum.Material.Marble},
		{Enum.Material.Mud},
		{Enum.Material.Salt},
		{Enum.Material.Sandstone},
		{Enum.Material.Slate},
		{Enum.Material.Pavement},
		{Enum.Material.Rock},
		{Enum.Material.WoodPlanks},
		{Enum.Material.Glass},
		{Enum.Material.Concrete},
		{Enum.Material.Neon},
		{Enum.Material.Ice},
		{Enum.Material.Basalt},
		{Enum.Material.Ceramic},
		{Enum.Material.Fabric},
		{Enum.Material.Brick},
		{Enum.Material.CorrodedMetal},
		{Enum.Material.Foil},
		{Enum.Material.Glacier},
		{Enum.Material.LeafyGrass},
		{Enum.Material.CrackedLava},
		{Enum.Material.Cobblestone},
		{Enum.Material.DiamondPlate},
		{Enum.Material.Marble},
		{Enum.Material.Mud},
		{Enum.Material.Neon},
		{Enum.Material.Pavement},
		{Enum.Material.Salt},
		{Enum.Material.Sandstone},
		{Enum.Material.Slate},
		{Enum.Material.WoodPlanks},
		{Enum.Material.Glass},
		{Enum.Material.Metal},
		{Enum.Material.Basalt},
		{Enum.Material.Concrete},
		{Enum.Material.Ceramic},
		{Enum.Material.Rock},
		{math.random()},
		{math.random(0, 100)},
		{math.floor(3.7)},
		{math.ceil(3.3)},
		{0.0001},
		{-9999},
		{math.pi},
		{math.exp(1)},
		{math.sqrt(2)},
		{math.sqrt(16)},
		{math.abs(-42)},
		{math.log(10)},
		{math.log(1)},
		{math.log(100)},
		{math.sin(math.pi / 2)},
		{math.cos(0)},
		{math.tan(math.pi / 4)},
		{math.asin(1)},
		{math.acos(0)},
		{math.atan(1)},
		{math.deg(math.pi)},
		{math.rad(180)},
		{math.max(1, 2, 3, 4)},
		{math.min(-1, 0, 1)},
		{math.random(1, 1000)},
		{math.random(1000, 10000)},
		{math.random(10000, 100000)},
		{math.floor(math.random() * 100)},
		{math.ceil(math.random() * 100)},
		{0.001},
		{0.01},
		{0.1},
		{1e-4},
		{1e-5},
		{-0.0001},
		{-1e-5},
		{1.5},
		{2.5},
		{3.1415},
		{2.7182},
		{-3.14},
		{-2.718},
		{123456789},
		{-123456789},
		{1/3},
		{-1/3},
		{0.3333},
		{-0.3333},
		{math.sqrt(0.5)},
		{math.sqrt(0.25)},
		{math.sqrt(0.125)},
		{math.sqrt(100)},
		{math.pow(2, 10)},
		{math.pow(10, 3)},
		{math.pow(5, 5)},
		{math.pow(3, 7)},
		{math.sin(0)},
		{math.sin(math.pi)},
		{math.sin(math.pi * 2)},
		{math.cos(math.pi)},
		{math.cos(math.pi * 2)},
		{math.tan(0)},
		{math.tan(math.pi / 6)},
		{math.tan(math.pi / 3)},
		{math.atan(0.5)},
		{math.atan(1)},
		{math.atan(2)},
		{math.floor(123.456)},
		{math.floor(789.1011)},
		{math.floor(-456.789)},
		{math.ceil(123.456)},
		{math.ceil(789.1011)},
		{math.ceil(-456.789)},
		{math.random() * 1000},
		{-math.random() * 1000},
		{math.random() * -1000},
		{math.abs(math.random(-1000, 1000))},
		{-math.abs(math.random(-1000, 1000))},
		{math.pi / 4},
		{math.pi / 3},
		{math.pi / 6},
		{math.pi / 8},
		{math.pi / 10},
		{math.pi * 10},
		{math.pi * 100},
		{math.pi * 1000},
		{math.exp(2)},
		{math.exp(3)},
		{math.exp(-1)},
		{math.log(0.1)},
		{math.log(0.5)},
		{math.log(2)},
		{math.log(5)},
		{math.random(0, 1)},
		{math.random(1, 10)},
		{math.random(10, 20)},
		{math.random(20, 30)},
		{math.random(30, 40)},
		{math.random(40, 50)},
		{math.random(50, 60)},
		{math.random(60, 70)},
		{math.random(70, 80)},
		{math.random(80, 90)},
		{math.random(90, 100)},
		{math.random(100, 110)},
		{math.random(110, 120)},
		{math.random(120, 130)},
		{math.random(130, 140)},
		{math.random(140, 150)},
		{math.random(150, 160)},
		{math.random(160, 170)},
		{math.random(170, 180)},
		{math.random(180, 190)},
		{math.random(190, 200)},
		{math.random(200, 210)},
		{math.random(210, 220)},
		{math.random(220, 230)},
		{math.random(230, 240)},
		{math.random(240, 250)},
		{math.random(250, 260)},
		{math.random(260, 270)},
		{math.random(270, 280)},
		{math.random(280, 290)},
		{math.random(290, 300)},
		{math.random(300, 310)},
		{math.random(310, 320)},
		{math.random(320, 330)},
		{math.random(330, 340)},
		{math.random(340, 350)},
		{math.random(350, 360)},
		{math.random(-100, 100)},
		{math.random(-200, 200)},
		{math.random(-300, 300)},
		{math.random(-400, 400)},
		{math.random(-500, 500)},
		{math.random(-600, 600)},
		{math.random(-700, 700)},
		{math.random(-800, 800)},
		{math.random(-900, 900)},
		{math.random(-1000, 1000)},
		{math.random(1000, 2000)},
		{math.random(2000, 3000)},
		{math.random(3000, 4000)},
		{math.random(4000, 5000)},
		{math.random(5000, 6000)},
		{math.random(6000, 7000)},
		{math.random(7000, 8000)},
		{math.random(8000, 9000)},
		{math.random(9000, 10000)},
		{math.random(10000, 20000)},
		{math.random(20000, 30000)},
		{math.random(30000, 40000)},
		{math.random(40000, 50000)},
		{math.random(50000, 60000)},
		{math.random(60000, 70000)},
		{math.random(70000, 80000)},
		{math.random(80000, 90000)},
		{math.random(90000, 100000)},
		{true},
		{false},
		{nil},
		{function() return 1 end},
		{function(x) return x * 2 end},
		{function() print("hello") end},
		{coroutine.create(function() end)},
		{coroutine.running()},
		{"simple string"},
		{"another string"},
		{""},
		{" "},
		{"\n"},
		{"\t"},
		{"\r\n"},
		{"\0"},
		{"special chars !@#$%^&*()"},
		{"unicode äöüß"},
		{"emoji 😀🚀✨"},
		{"long string "..string.rep("a", 100)},
		{"multi\nline\nstring"},
		{{}},
		{{foo = "bar"}},
		{{1,2,3}},
		{{a=1,b=2,c=3}},
		{{true,false,true}},
		{{nested={foo="bar"}}},
		{{[1]="one",[2]="two"}},
		{{math = math}},
		{game},
		{game.Players},
		{game.Workspace},
		{game.Lighting},
		{game.ReplicatedStorage},
		{Instance.new("Part")},
		{Instance.new("Model")},
		{Instance.new("Humanoid")},
		{Vector3.new(0,0,0)},
		{Vector3.new(1,2,3)},
		{CFrame.new()},
		{CFrame.new(1,2,3)},
		{UDim.new(0,50)},
		{UDim2.new(0,50,0,100)},
		{Color3.new(1,0,0)},
		{Color3.fromRGB(255,255,255)},
		{BrickColor.new("Bright red")},
		{Enum.KeyCode.Space},
		{Enum.UserInputType.Keyboard},
		{Enum.Font.Arial},
		{Enum.Material.Wood},
		{Vector2.new(10,20)},
		{Region3.new(Vector3.new(0,0,0), Vector3.new(1,1,1))},
		{Ray.new(Vector3.new(0,0,0), Vector3.new(1,0,0))},
		{tick()},
		{os.time()},
		{os.date()},
		{os.clock()},
		{newproxy(true)},
		{newproxy(false)},
		{setmetatable({}, {__index=function() return 42 end})},
		{coroutine.wrap(function() end)},
		{coroutine.yield()},
		{math.huge},
		{math.pi},
		{math.exp(1)},
		{math.sqrt(2)},
		{math.sin(math.pi/2)},
		{math.cos(0)},
		{math.tan(math.pi/4)},
		{math.log(10)},
		{math.randomseed(os.time())},
		{math.frexp(10)},
		{math.ldexp(2, 3)},
		{bit32.band(5, 3)},
		{bit32.bor(5, 3)},
		{bit32.bxor(5, 3)},
		{bit32.lshift(1, 2)},
		{bit32.rshift(4, 1)},
		{bit32.arshift(4, 1)},
		{bit32.bnot(5)},
		{table.insert},
		{table.remove},
		{table.sort},
		{table.concat},
		{string.byte},
		{string.char},
		{string.find},
		{string.format},
		{string.gsub},
		{string.len},
		{string.lower},
		{string.rep},
		{string.sub},
		{string.upper},
		{os.exit},
		{os.getenv},
		{os.remove},
		{os.rename},
		{os.tmpname},
		{debug.getinfo},
		{debug.getlocal},
		{debug.getupvalue},
		{debug.setupvalue},
		{debug.traceback},
		{coroutine.status(coroutine.create(function() end))},
		{setmetatable({}, {__tostring = function() return "metatable tostring" end})},
		{_G},
		{_VERSION},
		{require},
		{pcall},
		{xpcall},
		{loadstring("return 123")},
		{next},
		{pairs},
		{ipairs},
		{select},
		{type},
		{tonumber},
		{tostring},
		{newproxy()},
		{os.clock()},
		{os.date("%Y-%m-%d")},
		{os.time({year=2020, month=10, day=4})},
		{string.pack("i4", 42)},
		{string.unpack("i4", string.pack("i4", 42))},
		{debug.sethook},
		{debug.sethook(nil)},
		{coroutine.resume(coroutine.create(function() end))},
		{math.random(1, 2)},
		{function(a,b) return a + b end},
		{function(...) return {...} end},
		{function() return coroutine.yield() end},
		{function() coroutine.resume(coroutine.create(function() end)) end},
		{function() error("test error") end},
		{function() pcall(error) end},
		{function() return coroutine.running() end},
		{function() return coroutine.status(coroutine.running()) end},
		{function() return debug.traceback() end},
		{function() return debug.getinfo(1) end},
		{function() return debug.getlocal(1,1) end},
		{function() return debug.getupvalue(function() end, 1) end},
		{function() return debug.setupvalue(function() end, 1, 42) end},
		{function() return setmetatable({}, {}) end},
		{function() return getmetatable({}) end},
		{function() return rawget({}, "foo") end},
		{function() return rawset({}, "foo", 123) end},
		{function() return tonumber("123") end},
		{function() return tostring(123) end},
		{function() return type({}) end},
		{function() return coroutine.create(function() end) end},
		{function() return coroutine.isyieldable() end},
		{function() return coroutine.running() end},
		{function() return coroutine.status(coroutine.running()) end},
		{function() return debug.sethook() end},
		{function() return debug.sethook(nil) end},
		{function() return pcall(function() error("err") end) end},
		{function() return xpcall(function() error("err") end, function() end) end},
		{function() return unpack({1,2,3}) end},
		{function() return select(2, "a", "b", "c") end},
		{function() return table.concat({"a","b","c"}) end},
		{function() return table.insert({}, "a") end},
		{function() return table.remove({1,2,3}) end},
		{function() return os.date() end},
		{function() return os.time() end},
		{function() return os.clock() end},
		{function() return os.difftime(os.time(), os.time()) end},
		{function() return debug.traceback() end},
		{function() return math.random(1,10) end},
		{function() return math.floor(3.14) end},
		{function() return math.ceil(3.14) end},
		{function() return math.sqrt(16) end},
		{function() return math.pow(2, 10) end},
		{function() return math.sin(math.pi / 2) end},
		{function() return math.cos(0) end},
		{function() return math.tan(math.pi / 4) end},
		{function() return coroutine.yield() end},
		{function() return coroutine.resume(coroutine.create(function() end)) end},
		{function() return coroutine.status(coroutine.running()) end},
		{Enum.FontSize.Size24},
		{Enum.ScaleType.Stretch},
		{Enum.SortDirection.Descending},
		{Enum.TouchState.Begin},
		{Enum.HumanoidStateType.Running},
		{Enum.BodyPart.Head},
		{Enum.PartType.Ball},
		{Enum.KeyCode.Escape},
		{Enum.UserInputState.Begin},
		{Enum.Difficulty.Hard},
		{Enum.Material.Neon},
		{Enum.NormalId.Top},
		{Enum.CameraType.Scriptable},
		{Enum.FontWeight.Bold},
		{Enum.PhysicsPriority.High},
		{Enum.TextXAlignment.Center},
		{Enum.TextYAlignment.Bottom},
		{Enum.ContextActionPriority.High},
		{Enum.FilterType.Blacklist},
		{Enum.PathWaypointOrder.Ordered},
		{Enum.AutomaticSize.XY},
		{Enum.DragAxis.X},
		{Enum.InsertMode.Replace},
		{Enum.ItemState.Selected},
		{Enum.JoinState.Joined},
		{Enum.LoadState.Loaded},
		{Enum.MeshType.FileMesh},
		{Enum.NavigationDirection.Left},
		{Enum.PhysicsSoundType.Grass},
		{Enum.PositionInterpolationMode.Linear},
		{Enum.ReplicationFocusType.Default},
		{Enum.ScrollBarThickness.Standard},
		{Enum.SelectionMode.Single},
		{Enum.SortOrder.Ascending},
		{Enum.StudioStyleGuideModifier.Control},
		{Enum.TextTruncate.AtEnd},
		{Enum.UserInputType.Touch},
		{Enum.VertexFormat.Position},
		{Enum.WrapMode.Loop},
		{Enum.ZIndexBehavior.Sibling},
		{game.Players.LocalPlayer.Character},
		{game.Players.LocalPlayer.Backpack},
		{game.Players.LocalPlayer.PlayerGui},
		{game.Players.LocalPlayer.Character.HumanoidRootPart},
		{game.Players.LocalPlayer.Character.Head},
		{game.Players.LocalPlayer.Character.Torso},
		{game.Players.LocalPlayer.Character.Humanoid},
		{game.Workspace.Terrain},
		{game.Lighting.FogColor},
		{game.Lighting.FogEnd},
		{game.Lighting.Brightness},
		{game.Lighting.ClockTime},
		{game.ReplicatedStorage:FindFirstChild("SomeRemote")},
		{game:GetService("Players")},
		{game:GetService("Workspace")},
		{game:GetService("Lighting")},
		{game:GetService("ReplicatedStorage")},
		{Vector3int16.new(1, 2, 3)},
		{Vector3int16.new(0, 0, 0)},
		{Vector3int16.new(-1, -2, -3)},
		{NumberRange.new(1, 5)},
		{NumberRange.new(0, 0)},
		{TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)},
		{TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)},
		{RaycastParams.new()},
		{RaycastParams.new().FilterDescendantsInstances},
		{RaycastParams.new().FilterType},
		{RaycastParams.new().IgnoreWater},
		{Random.new()},
		{Random.new():NextNumber()},
		{Random.new():NextInteger(1, 10)},
		{Vector2int16.new(10, 20)},
		{UDim2.fromScale(0.5, 0.5)},
		{UDim2.fromOffset(100, 200)},
		{TweenService = game:GetService("TweenService")},
		{Debris = game:GetService("Debris")},
		{ContextActionService = game:GetService("ContextActionService")},
		{RunService = game:GetService("RunService")},
		{UserInputService = game:GetService("UserInputService")},
		{HttpService = game:GetService("HttpService")},
		{MarketplaceService = game:GetService("MarketplaceService")},
		{TeleportService = game:GetService("TeleportService")},
		{Players = game:GetService("Players")},
		{StarterGui = game:GetService("StarterGui")},
		{StarterPack = game:GetService("StarterPack")},
		{SoundService = game:GetService("SoundService")},
		{Lighting = game:GetService("Lighting")},
		{CollectionService = game:GetService("CollectionService")},
		{ReplicatedFirst = game:GetService("ReplicatedFirst")},
		{PathfindingService = game:GetService("PathfindingService")},
		{TextService = game:GetService("TextService")},
		{TextChatService = game:GetService("TextChatService")},
		{PhysicsService = game:GetService("PhysicsService")},
		{TweenService = game:GetService("TweenService")},
		{Chat = game:GetService("Chat")},
		{Stats = game:GetService("Stats")},
		{LogService = game:GetService("LogService")},
		{game.Players:GetChildren()},
		{game.Players:GetPlayerByUserId(123456)},
		{game.Players:GetPlayerFromCharacter(game.Players.LocalPlayer.Character)},
		{game.Players:GetNameFromUserIdAsync(123456)},
		{game.Players:GetUserIdFromNameAsync("PlayerName")},
		{game.Players:FindFirstChild("PlayerName")},
		{game.Players:WaitForChild("PlayerName")},
		{game.Workspace:WaitForChild("SomePart")},
		{game.ReplicatedStorage:WaitForChild("SomeRemote")},
		{game:GetService("Players").LocalPlayer},
		{game:GetService("Players").LocalPlayer.CharacterAdded},
		{game:GetService("Players").LocalPlayer.CharacterRemoving},
		{game:GetService("Players").LocalPlayer.Chatted},
		{game:GetService("RunService").BindToRenderStep},
		{game:GetService("RunService").UnbindFromRenderStep},
		{game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Test", Text = "Hello"})},
		{game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)},
		{game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)},
		{game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {Text = "Hello"})},
		{game:GetService("MarketplaceService"):PromptPurchase(game.Players.LocalPlayer, 123456)},
		{game:GetService("TeleportService"):Teleport(123456, game.Players.LocalPlayer)},
		{game:GetService("UserInputService"):GetKeysPressed()},
		{game:GetService("UserInputService"):GetGamepadConnected(Enum.UserInputType.Gamepad1)},
		{game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton2)},
		{game:GetService("RunService"):IsStudio()},
		{[[ local hint = Instance.new("Hint", workspace)
        hint.Text = "StellySpy V3 Massive Args Pack"
        return hint]]},
		{true},
		{false},
		{nil},
		{""},
		{"example"},
		{"Roblox"},
		{"StellySpy"},
		{"TestString"},
		{"123"},
		{"special_chars!@#"},
		{"\n"},
		{"\t"},
		{0},
		{1},
		{123},
		{-1},
		{math.pi},
		{math.huge},
		{math.random()},
		{math.random(1,10)},
		{math.floor(5.7)},
		{math.ceil(2.3)},
		{Vector3.new(0,0,0)},
		{Vector3.new(10,20,30)},
		{Vector3.new(-5,3,-8)},
		{Vector2.new(0,0)},
		{Vector2.new(50,100)},
		{Vector2.new(-10,20)},
		{Color3.new(1,0,0)},
		{Color3.new(0,1,0)},
		{Color3.new(0,0,1)},
		{Color3.fromRGB(255,255,255)},
		{Color3.fromRGB(128,128,128)},
		{BrickColor.new("Bright red")},
		{BrickColor.new("Bright blue")},
		{Enum.KeyCode.W},
		{Enum.KeyCode.Space},
		{Enum.UserInputType.MouseButton1},
		{Enum.UserInputType.Touch},
		{Enum.Font.SourceSans},
		{Enum.Material.Wood},
		{Enum.Material.Neon},
		{Enum.HumanoidStateType.Running},
		{Enum.BodyPart.Head},
		{Enum.SortOrder.Ascending},
		{UDim.new(0, 100)},
		{UDim2.new(0, 50, 0, 100)},
		{CFrame.new(0,0,0)},
		{CFrame.new(10,20,30)},
		{Ray.new(Vector3.new(), Vector3.new(0,1,0))},
		{Region3.new(Vector3.new(0,0,0), Vector3.new(4,4,4))},
		{Instance.new("Part")},
		{Instance.new("Model")},
		{Instance.new("Humanoid")},
		{Instance.new("ScreenGui")},
		{Instance.new("TextLabel")},
		{Instance.new("TextButton")},
		{Instance.new("ImageLabel")},
		{Instance.new("Folder")},
		{Instance.new("Tool")},
		{game},
		{game.Players},
		{game.Workspace},
		{game.Lighting},
		{game.ReplicatedStorage},
		{game.StarterGui},
		{game:GetService("Players")},
		{game:GetService("Workspace")},
		{game:GetService("Lighting")},
		{game:GetService("ReplicatedStorage")},
		{game:GetService("StarterGui")},
		{game:GetService("TweenService")},
		{game:GetService("Debris")},
		{game:GetService("RunService")},
		{game:GetService("UserInputService")},
		{game:GetService("ContextActionService")},
		{game:GetService("HttpService")},
		{game:GetService("MarketplaceService")},
		{game.Players.LocalPlayer},
		{game.Players.LocalPlayer.Character},
		{game.Players.LocalPlayer.Backpack},
		{game.Players.LocalPlayer.PlayerGui},
		{game.Players.LocalPlayer.Character.HumanoidRootPart},
		{game.Players.LocalPlayer.Character.Head},
		{game.Players.LocalPlayer.Character.Torso},
		{game.Players.LocalPlayer.Character.Humanoid},
		{Vector3int16.new(1,2,3)},
		{Vector3int16.new(0,0,0)},
		{NumberRange.new(1,10)},
		{NumberRange.new(0,0)},
		{TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)},
		{TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)},
		{Random.new()},
		{Random.new():NextNumber()},
		{Random.new():NextInteger(1, 100)},
		{Vector2int16.new(5,10)},
		{UDim2.fromScale(0.5, 0.5)},
		{UDim2.fromOffset(100, 200)},
		{RaycastParams.new()},
		{RaycastParams.new().IgnoreWater},
		{RaycastParams.new().FilterType},
		{RaycastParams.new().FilterDescendantsInstances},
		{Enum.FontWeight.Bold},
		{Enum.FontWeight.Light},
		{Enum.TextXAlignment.Left},
		{Enum.TextXAlignment.Right},
		{Enum.TextYAlignment.Top},
		{Enum.TextYAlignment.Center},
		{Enum.TextYAlignment.Bottom},
		{Enum.AutomaticSize.X},
		{Enum.AutomaticSize.Y},
		{Enum.DragAxis.X},
		{Enum.DragAxis.Y},
		{Enum.InsertMode.Insert},
		{Enum.InsertMode.Replace},
		{Enum.ItemState.Default},
		{Enum.ItemState.Selected},
		{Enum.JoinState.Joined},
		{Enum.JoinState.NotJoined},
		{Enum.LoadState.Loaded},
		{Enum.LoadState.Unloaded},
		{Enum.MeshType.Sphere},
		{Enum.MeshType.Cylinder},
		{Enum.MeshType.FileMesh},
		{Enum.NavigationDirection.Forward},
		{Enum.NavigationDirection.Backward},
		{Enum.PhysicsSoundType.Grass},
		{Enum.PhysicsSoundType.Wood},
		{Enum.PhysicsSoundType.Metal},
		{Enum.PositionInterpolationMode.Linear},
		{Enum.PositionInterpolationMode.Smooth},
		{Enum.ReplicationFocusType.Default},
		{Enum.ScrollBarThickness.Standard},
		{Enum.ScrollBarThickness.Thick},
		{Enum.SelectionMode.None},
		{Enum.SelectionMode.Single},
		{Enum.SelectionMode.Multiple},
		{Enum.SortDirection.Ascending},
		{Enum.SortDirection.Descending},
		{Enum.StudioStyleGuideModifier.Control},
		{Enum.StudioStyleGuideModifier.Shift},
		{Enum.StudioStyleGuideModifier.Alt},
		{Enum.TextTruncate.None},
		{Enum.TextTruncate.AtEnd},
		{Enum.TextTruncate.AtMiddle},
		{Enum.TextTruncate.AtStart},
		{Enum.UserInputState.Begin},
		{Enum.UserInputState.Change},
		{Enum.UserInputState.End},
		{Enum.UserInputType.Keyboard},
		{Enum.UserInputType.MouseMovement},
		{Enum.UserInputType.Gamepad1},
		{Enum.UserInputType.Touch},
		{Enum.VertexFormat.Position},
		{Enum.VertexFormat.Normal},
		{Enum.WrapMode.Loop},
		{Enum.WrapMode.Once},
		{Enum.ZIndexBehavior.Global},
		{Enum.ZIndexBehavior.Sibling},
		{game.Workspace.CurrentCamera},
		{game.Players.LocalPlayer:GetMouse()},
		{game:GetService("Players"):GetPlayers()},
		{game:GetService("Players"):GetUserIds()},
		{game:GetService("Players"):GetPlayerByName("PlayerName")},
		{game.Players.LocalPlayer.CharacterAdded},
		{game.Players.LocalPlayer.CharacterRemoving},
		{game.Players.LocalPlayer.Chatted},
		{game.Players.LocalPlayer.Idled},
		{game.Players.LocalPlayer:GetFriendsOnline()},
		{game:GetService("StarterGui"):SetCore("SendNotification", {Title="Test", Text="Hello"})},
		{game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)},
		{game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)},
		{game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {Text="System message"})},
		{game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W)},
		{game:GetService("UserInputService"):GetMouseLocation()},
		{game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton1)},
		{game:GetService("UserInputService"):GetGamepadConnected(Enum.UserInputType.Gamepad1)},
		{game:GetService("UserInputService"):GetLastInputType()},
		{game:GetService("Workspace"):FindPartOnRay(Ray.new(Vector3.new(), Vector3.new(0,1,0)))},
		{game:GetService("Workspace"):GetPartsInRegion3(Region3.new(Vector3.new(0,0,0), Vector3.new(10,10,10)))},
		{game:GetService("Workspace"):GetChildren()},
		{game.Players:GetChildren()},
		{game.Players:GetPlayerByUserId(123456)},
		{game.Players:GetNameFromUserIdAsync(123456)},
		{game.Players:GetUserIdFromNameAsync("PlayerName")},
		{game.Players:FindFirstChild("PlayerName")},
		{game.Players:WaitForChild("PlayerName")},
		{game.Workspace:WaitForChild("SomePart")},
		{game.ReplicatedStorage:WaitForChild("SomeRemote")},
		{tick()},
		{os.time()},
		{os.date()},
		{os.clock()},
		{coroutine.create(function() end)},
		{coroutine.running()},
		{coroutine.status(coroutine.running())},
		{coroutine.yield()},
		{pcall(function() return 123 end)},
		{xpcall(function() error("err") end, function() end)},
		{type(123)},
		{tostring(123)},
		{tonumber("123")},
		{next({a=1,b=2})},
		{pairs({1,2,3})},
		{ipairs({1,2,3})},
		{select(1, "a", "b", "c")},
		{table.insert({}, "a")},
		{table.remove({1,2,3})},
		{table.sort({3,2,1})},
		{table.concat({"a","b","c"})},
		{string.byte("a")},
		{string.char(97)},
		{string.find("hello", "ll")},
		{string.format("Number: %d", 42)},
		{string.gsub("hello world", "world", "Roblox")},
		{string.len("test")},
		{string.lower("TEST")},
		{string.rep("abc", 3)},
		{string.sub("hello", 2, 4)},
		{string.upper("hello")},
		{debug.getinfo(function() end)},
		{debug.traceback()},
		{debug.getlocal(1,1)},
		{debug.getupvalue(function() end, 1)},
		{debug.setupvalue(function() end, 1, 42)},
		{setmetatable({}, {})},
		{getmetatable({})},
		{rawget({a=1}, "a")},
		{rawset({}, "a", 123)},
		{require},
		{function() return 123 end},
		{function(a,b) return a + b end},
		{function(...) return {...} end},
		{function() print("Hello") end},
		{function() error("error") end},
		{function() return coroutine.running() end},
		{function() return debug.traceback() end},
		{function() return coroutine.yield() end},
		{function() return coroutine.resume(coroutine.create(function() end)) end},
		{function() return debug.getinfo(1) end},
		{function() return debug.getlocal(1,1) end},
		{function() return debug.getupvalue(function() end, 1) end},
		{function() return debug.setupvalue(function() end, 1, 42) end},
		{function() return setmetatable({}, {}) end},
		{function() return getmetatable({}) end},
		{function() return rawget({}, "foo") end},
		{function() return rawset({}, "foo", 123) end},
		{function() return tonumber("123") end},
		{function() return tostring(123) end},
		{function() return type({}) end},
		{function() return coroutine.create(function() end) end},
		{function() return coroutine.isyieldable() end},
		{function() return coroutine.status(coroutine.running()) end},
		{function() return debug.sethook() end},
		{function() return pcall(function() error("err") end) end},
		{function() return xpcall(function() error("err") end, function() end) end},
		{function() return unpack({1,2,3}) end},
		{function() return select(2, "a", "b", "c") end},
		{function() return next({a=1}) end},
		{function() return pairs({a=1}) end},
		{function() return ipairs({1,2,3}) end},
		{function() return table.insert({}, "a") end},
		{function() return table.remove({1,2,3}) end},
		{function() return table.sort({3,2,1}) end},
		{function() return table.concat({"a","b"}) end},
		{function() return string.byte("a") end},
		{function() return string.char(97) end},
		{function() return string.find("abc", "b") end},
		{function() return string.format("Number: %d", 10) end},
		{function() return string.gsub("hello", "h", "j") end},
		{function() return string.len("abc") end},
		{function() return string.lower("ABC") end},
		{function() return string.rep("abc", 2) end},
		{function() return string.sub("hello", 2, 3) end},
		{function() return string.upper("abc") end},
		{function() return game.Players.LocalPlayer.Character.HumanoidRootPart.Position end},
		{function() return game.Workspace.CurrentCamera.CFrame end},
		{function() return game.Players.LocalPlayer.PlayerGui end},
		{function() return game:GetService("Workspace"):GetChildren() end},
		{function() return game:GetService("Players"):GetPlayers() end},
		{function() return game:GetService("UserInputService"):GetMouseLocation() end},
		{function() return game:GetService("RunService"):IsRunning() end},
		{function() return game:GetService("Lighting").Ambient end},
		{function() return game:GetService("HttpService"):GenerateGUID(false) end},
		{function() return game:GetService("MarketplaceService"):PlayerOwnsAsset(game.Players.LocalPlayer, 123456) end},
		{function() return game:GetService("TweenService"):Create(Instance.new("Part"), TweenInfo.new(1), {Transparency = 1}) end},
		{function() return game:GetService("Debris"):AddItem(Instance.new("Part"), 5) end},
		{function() return game:GetService("ContextActionService"):BindAction("TestAction", function() end, false, Enum.KeyCode.E) end},
		{function() return game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {Text = "Hello from test args"}) end},
		{function() return game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.E) end},
		{Vector3.new(1, 2, 3)},
		{Vector3.new(-10, 0, 5)},
		{Vector2.new(100, 200)},
		{Vector2.new(-50, 50)},
		{Color3.new(0.5, 0.5, 0.5)},
		{Color3.fromRGB(100, 150, 200)},
		{BrickColor.new("Bright yellow")},
		{BrickColor.new("Really black")},
		{Enum.KeyCode.A},
		{Enum.KeyCode.LeftShift},
		{Enum.UserInputType.Keyboard},
		{Enum.UserInputType.Touch},
		{Enum.Font.Cartoon},
		{Enum.Font.GothamBold},
		{Enum.Material.Grass},
		{Enum.Material.Fabric},
		{Enum.HumanoidRigType.R6},
		{Enum.HumanoidRigType.R15},
		{Enum.BodyPart.LeftHand},
		{Enum.BodyPart.RightFoot},
		{Enum.SortOrder.Descending},
		{Enum.AutomaticSize.None},
		{UDim.new(1, 0)},
		{UDim2.new(1, 10, 0, 20)},
		{CFrame.Angles(0, math.rad(90), 0)},
		{CFrame.new(5, 5, 5) * CFrame.Angles(0, math.rad(45), 0)},
		{Ray.new(Vector3.new(1,1,1), Vector3.new(0,-1,0))},
		{Region3.new(Vector3.new(1,1,1), Vector3.new(2,2,2))},
		{Instance.new("Sound")},
		{Instance.new("Camera")},
		{Instance.new("VehicleSeat")},
		{Instance.new("Humanoid")},
		{Instance.new("Decal")},
		{game.Players.LocalPlayer.Character.Head},
		{game.Players.LocalPlayer.Character.Torso},
		{game.Players.LocalPlayer.Character.HumanoidRootPart},
		{game.Workspace.Terrain},
		{game.Workspace.CurrentCamera},
		{game.ReplicatedStorage:FindFirstChild("SomeRemote")},
		{game.Lighting},
		{game.StarterPack},
		{game.StarterPlayer},
		{game:GetService("Players").LocalPlayer},
		{game:GetService("RunService"):IsStudio()},
		{game:GetService("UserInputService"):GetLastInputType()},
		{game:GetService("HttpService"):GenerateGUID(true)},
		{game:GetService("TweenService")},
		{game:GetService("Debris")},
		{game:GetService("ContextActionService")},
		{game:GetService("MarketplaceService")},
		{game:GetService("Chat")},
		{game:GetService("LocalizationService")},
		{game:GetService("TextService")},
		{game:GetService("TeamService")},
		{game:GetService("TestService")},
		{game:GetService("Stats")},
		{game:GetService("PathfindingService")},
		{game:GetService("PhysicsService")},
		{game:GetService("ChangeHistoryService")},
		{game:GetService("NetworkServer")},
		{game:GetService("NetworkClient")},
		{game:GetService("StarterGui")},
		{game:GetService("CoreGui")},
		{game:GetService("LogService")},
		{game:GetService("BadgeService")},
		{game:GetService("AnalyticsService")},
		{game:GetService("TeleportService")},
		{game:GetService("DataStoreService")},
		{game:GetService("MemoryStoreService")},
		{game:GetService("CollectionService")},
		{game:GetService("UserGameSettings")},
		{game:GetService("LocalizationService")},
		{math.sin(math.pi / 4)},
		{math.cos(math.pi / 3)},
		{math.tan(math.pi / 6)},
		{math.abs(-123)},
		{math.max(1, 3, 2)},
		{math.min(5, 10, 0)},
		{math.exp(1)},
		{math.log(10)},
		{math.sqrt(16)},
		{math.deg(math.pi / 2)},
		{math.rad(180)},
		{string.rep("x", 10)},
		{string.reverse("hello")},
		{string.gsub("abcabc", "a", "z")},
		{string.match("hello world", "%a+")},
		{string.find("hello world", "world")},
		{string.format("Pi is approx %.2f", math.pi)},
		{table.concat({"a","b","c"}, "-")},
		{table.insert({1,2,3}, 4)},
		{table.remove({1,2,3}, 1)},
		{table.sort({3,1,2})},
		{pcall(function() return "safe" end)},
		{xpcall(function() error("fail") end, function() end)},
		{coroutine.create(function() print("hello") end)},
		{coroutine.resume(coroutine.create(function() end))},
		{coroutine.status(coroutine.create(function() end))},
		{type("string")},
		{type(123)},
		{type({})},
		{type(function() end)},
		{tostring(123)},
		{tonumber("456")},
		{next({a=1,b=2})},
		{pairs({1,2,3})},
		{ipairs({4,5,6})},
		{select(1, "a", "b")},
		{select("#", "a", "b", "c")},
		{function() return true end},
		{function(a,b) return a+b end},
		{function(...) return {...} end},
		{Vector3int16.new(1,1,1)},
		{Vector3int16.new(0,0,0)},
		{NumberRange.new(5, 10)},
		{NumberRange.new(0, 0)},
		{Random.new():NextNumber()},
		{Random.new():NextInteger(10, 20)},
		{UDim2.fromOffset(10, 20)},
		{UDim2.fromScale(0.25, 0.5)},
		{RaycastParams.new()},
		{Enum.TextXAlignment.Center},
		{Enum.TextYAlignment.Top},
		{Enum.FontWeight.Normal},
		{Enum.DragAxis.X},
		{Enum.DragAxis.Y},
		{Enum.ItemState.Selected},
		{Enum.JoinState.NotJoined},
		{Enum.LoadState.Loaded},
		{Enum.MeshType.FileMesh},
		{Enum.NavigationDirection.Left},
		{Enum.PhysicsSoundType.Water},
		{Enum.PositionInterpolationMode.Smooth},
		{Enum.ReplicationFocusType.Movement},
		{Enum.ScrollBarThickness.Thick},
		{Enum.SelectionMode.Single},
		{Enum.SortDirection.Ascending},
		{Enum.StudioStyleGuideModifier.Command},
		{Enum.TextTruncate.AtEnd},
		{Enum.UserInputState.End},
		{Enum.UserInputType.Gamepad1},
		{Enum.VertexFormat.TextureCoordinate},
		{Enum.WrapMode.Loop},
		{Enum.ZIndexBehavior.Global},
		{game.Players.LocalPlayer:GetMouse()},
		{game.Players:GetPlayers()},
		{game.Players:GetUserIdFromNameAsync("Player")},
		{game.Players:GetNameFromUserIdAsync(12345)},
		{game.Players:GetPlayerByUserId(12345)},
		{game.Players:GetPlayerByName("Player")},
		{tick()},
		{os.time()},
		{os.date("%Y-%m-%d")},
		{os.clock()},
		{debug.traceback()},
		{debug.getinfo(function() end)},
		{debug.getlocal(1,1)},
		{debug.getupvalue(function() end, 1)},
		{debug.setupvalue(function() end, 1, 42)},
		{setmetatable({}, {})},
		{getmetatable({})},
		{function() return 123 end},
		{function(a,b) return a*b end},
		{function(...) return {...} end},
		{function() print("hello world") end},
		{function() error("error") end},
		{function() return coroutine.running() end},
		{function() return coroutine.yield() end},
		{function() return coroutine.status(coroutine.running()) end},
		{function() return coroutine.resume(coroutine.create(function() end)) end},
		{function() return debug.getinfo(1) end},
		{function() return debug.getlocal(1,1) end},
		{function() return debug.getupvalue(function() end, 1) end},
		{function() return debug.setupvalue(function() end, 1, 42) end},
		{function() return setmetatable({}, {}) end},
		{function() return getmetatable({}) end},
		{function() return rawget({}, "foo") end},
		{function() return rawset({}, "foo", 123) end},
		{function() return tonumber("123") end},
		{function() return tostring(456) end},
		{function() return type({}) end},
		{function() return coroutine.create(function() end) end},
		{function() return coroutine.isyieldable() end},
		{function() return coroutine.status(coroutine.running()) end},
		{function() return debug.sethook() end},
		{function() return pcall(function() error("fail") end) end},
		{function() return xpcall(function() error("fail") end, function() end) end},
		{function() return unpack({1,2,3}) end},
		{function() return select(2, "a", "b", "c") end},
		{game.Players.LocalPlayer.Chatted},
		{game.Players.LocalPlayer.Idled},
		{game.Players.LocalPlayer.CharacterAdded},
		{game.Players.LocalPlayer.CharacterRemoving},
		{game.Players.LocalPlayer:GetMouse().KeyDown},
		{game.Players.LocalPlayer:GetMouse().KeyUp},
		{game.Workspace.ChildAdded},
		{game.Workspace.ChildRemoved},
		{game.Workspace.DescendantAdded},
		{game.Workspace.DescendantRemoving},
		{game:GetService("RunService").Heartbeat},
		{game:GetService("RunService").Stepped},
		{game:GetService("RunService").RenderStepped},
		{game:GetService("UserInputService").InputBegan},
		{game:GetService("UserInputService").InputChanged},
		{game:GetService("UserInputService").InputEnded},
		{game:GetService("UserInputService").TouchStarted},
		{game:GetService("UserInputService").TouchMoved},
		{game:GetService("UserInputService").TouchEnded},
		{game:GetService("ContextActionService").ActionTriggered},
		{game:GetService("GuiService").MenuOpened},
		{game:GetService("GuiService").MenuClosed},
		{game:GetService("StarterGui").ResetCoreGuiEnabled},
		{game:GetService("Lighting").Changed},
		{game:GetService("TweenService").Completed},
		{game:GetService("HttpService").RequestCompleted},
		{game:GetService("MarketplaceService").PromptPurchaseFinished},
		{game:GetService("CollectionService").GetInstanceAddedSignal("Tag")},
		{game:GetService("CollectionService").GetInstanceRemovedSignal("Tag")},
		{game:GetService("TextService").GetTextSize},
		{game:GetService("TextService").GetFontSize},
		{game:GetService("RunService").BindToRenderStep},
		{game:GetService("RunService").UnbindFromRenderStep},
		{game:GetService("UserInputService").GetGamepadState},
		{game:GetService("UserInputService").GetLastInputType},
		{game:GetService("VirtualUser").CaptureController},
		{game:GetService("VirtualUser").ClickButton1},
		{game:GetService("VirtualUser").ClickButton2},
		{game:GetService("GuiService").SelectedObjectChanged},
		{game:GetService("UserInputService").GamepadDisconnected},
		{game:GetService("UserInputService").GamepadConnected},
		{game:GetService("UserInputService").MouseBehaviorChanged},
		{game:GetService("UserInputService").TouchTap},
		{game:GetService("UserInputService").DeviceRotationChanged},
		{game:GetService("RunService").IsClient},
		{game:GetService("RunService").IsServer},
		{game:GetService("RunService"):IsRunning()},
		{game:GetService("UserInputService"):GetPlatform()},
		{game:GetService("UserInputService"):GetUserInputState(Enum.UserInputType.MouseButton1)},
		{game:GetService("UserInputService"):GetMouseLocation()},
		{game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W)},
		{game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton1)},
		{game:GetService("UserInputService"):GetConnectedGamepads()},
		{game:GetService("StarterGui"):GetCore("SendNotification")},
		{game:GetService("StarterGui"):SetCore("ResetButtonCallback")},
		{game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)},
		{game:GetService("Players").PlayerAdded},
		{game:GetService("Players").PlayerRemoving},
		{game:GetService("Players").LocalPlayer:GetFriendsOnline()},
		{game:GetService("Players").LocalPlayer:GetRankInGroup(0)},
		{game:GetService("Players").LocalPlayer:GetRankNameInGroup(0)},
		{game:GetService("Players").LocalPlayer:GetMembershipType()},
		{game:GetService("Players").LocalPlayer:GetRoleInGroup(0)},
		{game:GetService("Players").LocalPlayer:GetFriendsOnline()},
		{game:GetService("Players").LocalPlayer:IsInGroup(0)},
		{game:GetService("Players").LocalPlayer:IsFriendsWith(0)},
		{game:GetService("Players").LocalPlayer:IsInTeam()},
		{game:GetService("MarketplaceService").ProcessReceipt},
		{game:GetService("MarketplaceService").PromptGamePassPurchaseFinished},
		{game:GetService("MarketplaceService").PromptProductPurchaseFinished},
		{game:GetService("MarketplaceService").PromptPurchaseRequested},
		{game:GetService("MarketplaceService").PlayerOwnsAsset},
		{game:GetService("MarketplaceService").PlayerOwnsGamePassAsync},
		{game:GetService("MarketplaceService").PlayerOwnsAsset},
		{game:GetService("DataStoreService"):GetDataStore("Test")},
		{game:GetService("DataStoreService"):GetGlobalDataStore()},
		{game:GetService("DataStoreService"):GetOrderedDataStore("Test")},
		{game:GetService("MemoryStoreService"):GetSortedMap("Test")},
		{game:GetService("MemoryStoreService"):GetQueue("Test")},
		{game:GetService("RunService").Set3dRenderingEnabled},
		{game:GetService("RunService").Set3dRenderingEnabled},
		{game:GetService("NetworkClient").ConnectionAccepted},
		{game:GetService("NetworkClient").ConnectionFailed},
		{game:GetService("NetworkClient").ConnectionLost},
		{game:GetService("NetworkServer").PlayerConnected},
		{game:GetService("NetworkServer").PlayerDisconnected},
		{game:GetService("TeleportService").TeleportInitFailed},
		{game:GetService("TeleportService").TeleportFailed},
		{game:GetService("TeleportService").TeleportStarted},
		{game:GetService("TeleportService").TeleportSucceeded},
		{game:GetService("TeleportService").TeleportCompleted},
		{game:GetService("TeleportService").LocalPlayerTeleportStarted},
		{game:GetService("TeleportService").LocalPlayerTeleportCancelled},
		{game:GetService("TeleportService").LocalPlayerTeleportFinished},
		{game:GetService("BadgeService").PlayerBadgeGranted},
		{game:GetService("BadgeService").BadgeAwarded},
		{game:GetService("BadgeService").BadgeEarned},
		{game:GetService("Chat").OnMessageDoneFiltering},
		{game:GetService("Chat").OnMessagePosted},
		{game:GetService("Chat").OnChannelJoined},
		{game:GetService("Chat").OnChannelLeft},
		{game:GetService("Chat").OnTextMessageReceived},
		{game:GetService("Chat").OnNewMessage},
		{game:GetService("Chat").OnPlayerMuted},
		{game:GetService("Chat").OnPlayerUnmuted},
		{game:GetService("Chat").OnSpeakerAdded},
		{game:GetService("Chat").OnSpeakerRemoved},
		{game:GetService("ContextActionService").BindAction},
		{game:GetService("ContextActionService").UnbindAction},
		{game:GetService("ContextActionService").BindActionAtPriority},
		{game:GetService("ContextActionService").GetButtonDown},
		{game:GetService("ContextActionService").SetTitle},
		{game:GetService("ContextActionService").GetButtonUp},
		{game:GetService("ContextActionService").GetActions},
		{game:GetService("ContextActionService").SetPosition},
		{game:GetService("ContextActionService").SetVisible},
		{game:GetService("UserInputService").MouseIconEnabled},
		{game:GetService("UserInputService").MouseBehavior},
		{game:GetService("UserInputService").TouchEnabled},
		{game:GetService("UserInputService").KeyboardEnabled},
		{game:GetService("UserInputService").GamepadEnabled},
		{game:GetService("UserInputService").AccelerometerEnabled},
		{game:GetService("UserInputService").GyroscopeEnabled},
		{game:GetService("UserInputService").DeviceTilt},
		{game:GetService("UserInputService").MouseDeltaSensitivity},
		{game:GetService("UserInputService").MouseWheelForward},
		{game:GetService("UserInputService").MouseWheelBackward},
		{game:GetService("UserInputService").MouseMoveSensitivity},
		{game:GetService("UserInputService").MouseBehaviorChanged},
		{game:GetService("UserInputService").InputMethodChanged},
		{game:GetService("UserInputService").TextBoxFocusReleased},
		{game:GetService("UserInputService").TextBoxFocused},
		{game:GetService("UserInputService").TouchTap},
		{game:GetService("UserInputService").ShakeGesture},
		{game:GetService("UserInputService").GamepadConnected},
		{game:GetService("UserInputService").GamepadDisconnected},
		{game:GetService("UserInputService").GetConnectedGamepads()},
		{game:GetService("UserInputService").GetLastInputType()},
		{game:GetService("UserInputService").IsKeyDown(Enum.KeyCode.Space)},
		{game:GetService("UserInputService").IsMouseButtonPressed(Enum.UserInputType.MouseButton1)},
		{game:GetService("UserInputService").IsMouseButtonPressed(Enum.UserInputType.MouseButton2)},
		{game:GetService("UserInputService").IsMouseButtonPressed(Enum.UserInputType.MouseButton3)},
		{game:GetService("UserInputService").GetMouseLocation()},
		{game:GetService("UserInputService").GetGamepadState(Enum.UserInputType.Gamepad1)},
		{game:GetService("UserInputService").GetGamepadConnected()},
		{game:GetService("UserInputService").TouchLongPress},
		{game:GetService("UserInputService").TouchSwipe},
		{game:GetService("UserInputService").TouchPinch},
		{game:GetService("UserInputService").TouchRotate},
		{game:GetService("UserInputService").TouchPan},
		{game:GetService("UserInputService").TouchZoom},
		{game:GetService("UserInputService").TouchDoubleTap},
		{game:GetService("UserInputService").TouchTripleTap},
		{game:GetService("UserInputService").TouchSwipeLeft},
		{game:GetService("UserInputService").TouchSwipeRight},
		{game:GetService("UserInputService").TouchSwipeUp},
		{game:GetService("UserInputService").TouchSwipeDown},
		{game:GetService("UserInputService").TouchGesture},
{"a"},
{"ab"},
{"abc"},
{string.rep("a", 16)},
{string.rep("a", 64)},
{string.rep("a", 256)},
{string.rep("a", 1024)},
{string.rep("a", 4096)},
{string.rep("𐍈", 50)},
{string.rep("é", 50)},
{"こんにちは"},
{"你好"},
{"안녕하세요"},
{"Здравствуйте"},
{"مرحبا"},
{"😀😃😄😁😆"},
{"\0"},
{"\1\2\3"},
{"\n\r\n"},
{"\t\t\t"},
{" "},
{"    "},
{"\u{1F680}"}, 
{"long|" .. string.rep("XYZ", 500)},
{"repeat-abc-" .. string.rep("abc", 200)},
{"_____separator_____" },
{"nullbyte\0in\0middle"},
{"ends-with-null\0"},
{"contains-emoji-🚀"},
{"line1\nline2\nline3"},
{"tab\tseparated\tvalues"},
{"csv,example,one,two,three"},
{"semicolon;separated;values"},
{"colon:separated:values"},
{"key=value"},
{"key1=value1;key2=value2"},
{"url-like-http://example.com/path?x=1&y=2"},
{"mailto:someone@example.com"},
{"ftp://example.com/resource"},
{"file:///C:/path/to/file.txt"},
{"<xml><tag>value</tag></xml>"},
{"<html><body><p>test</p></body></html>"},
{"{\"name\":\"test\",\"v\":123}"},
{"[{\"a\":1},{\"b\":2}]"},
{"[1,2,3,4,5]"},
{"{\"nested\":{\"x\":[1,2,3],\"y\":\"z\"}}"},
{"{\"unicode\":\"åäöß漢字\"}"},
{"base64:" .. "aGVsbG8="},
{"hex:" .. "deadbeef"},
{"hex-long:" .. string.rep("ab", 200)},
{"uuid:" .. "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"},
{"guid:" .. "550e8400-e29b-41d4-a716-446655440000"},
{"json-like-noexec:{\"cmd\":\"noop\"}"},
{"xml-like-noexec:<cmd>noop</cmd>"},
{"repeat-pattern-0123456789" .. string.rep("0123456789", 50)},
{"markdown:# Heading\n\nSome text\n\n- list\n- item"},
{"sql-like:column1,column2,column3"},
{"random-words " .. table.concat({"alpha","beta","gamma","delta"}, " ")},
{"escape-chars:\\n\\r\\t\\\\"},
{"percent-encoded:%20%21%2F%3F"},
{"html-entities:&lt;&gt;&amp;&quot;&apos;"},
{"long-mixed:" .. string.rep("abCD12!@#", 200)},
{"mixed-unicode:å中文🙂🚀"},
{"zero-width:\226\128\139"}, -- zero-width joiner bytes
{"bidi:\u{202E}reverse"}, -- bidi mark (display oddness)
{"csv-quoted:\"a\",\"b\",\"c\""},
{"ini-like:[section]\nkey=value"},
{"yaml-like:- item1\n- item2\n- item3"},
{"proto-like:field1=1;field2=two"},
{"key-with-spaces: 'value with spaces'"},
{"trailing-spaces   "},
{"leading-spaces   test"},
{"surrounded-by-quotes:\"quoted value\""},
{"single-quote:'single'"},
{"double-quote:\"double\""},
{"mixed-quotes:\"he said 'hi'\""},
{"paren (inside) test"},
{"braces {inside} test"},
{"brackets [inside] test"},
{"angle <inside> test"},
{"unicode-control:\u{2028}\u{2029}"}, 
{"specials:~`!@#$%^&*()-_=+[]{};:'\",.<>/?\\"},
{"long-specials:" .. string.rep("!@#$%^&*()", 200)},
{"emoji-sequence:😀😁😂🤣😃😄😅😆😉😊"},
{"country-code:BR"},
{"language-code:pt-BR"},
{"locale:en_US.UTF-8"},
{"timestamp:" .. os.date("!%Y-%m-%dT%H:%M:%SZ")},
{"timestamp-local:" .. os.date("%Y-%m-%d %H:%M:%S")},
{"unix-ts:" .. tostring(os.time())},
{"float-as-string:" .. tostring(3.1415926535)},
{"scientific:1.23e10"},
{"negative-number-str:-42"},
{"boolean-str:true"},
{"boolean-str:false"},
{"null-str:null"},
{"undefined-str:undefined"},
{"empty-object:{}"},
{"empty-array:[]"},
{"lots-of-commas:,,,,,,"},
{"lots-of-dashes:-----"},
{"lots-of-underscores:_________"},
{"lots-of-equals:======="},
{"two-colons::"},
{"triple-colon:::"},
{"forward/slash/path/example"},
{"back\\slash\\path"},
{"mixed/slash\\path"},
{"windows-path:C:\\Program Files\\App"},
{"unix-path:/usr/local/bin"},
{"dot.file:.env"},
{"hidden-file:.gitignore"},
{"file-with-ext:document.pdf"},
{"image-file:photo.png"},
{"script-like-name:script.lua"},
{"long-filename:" .. string.rep("name_", 100) .. ".txt"},
{"repeating-words:" .. table.concat({("word"):rep(1)}, " ")},
{"palindrome:madamimadam"},
{"anagram:teststring"},
{"leet-speak:1337$p34k"},
{"hex-escape:\\x41\\x42\\x43"},
{"octal-escape:\\101\\102\\103"},
{"mixed-escapes:\\n\\t\\x41"},
{"unicode-escape:\\u00E9\\u00F1"},
{"control-characters:\7\8\9"},
{"bell-char:\7"},
{"backspace:\8"},
{"alert-and-newline:\7\n"},
{"nbsp:\u{00A0}nonbreaking"},
{"em-space:\u{2003}wide"},
{"math-symbols:∞ ≈ ≠ ≤ ≥"},
{"currency:€ $ £ ¥"},
{"percent:100%"},
{"fractions:½ ¼ ¾"},
{"roman-numerals:I II III IV V"},
{"ordinal:1st 2nd 3rd"},
{"version:v1.2.3"},
{"semver:1.0.0-beta+exp.sha.5114f85"},
{"file-paths-separated:" .. table.concat({"a","b","c"}, "/")},
{"dot-separated:com.example.test"},
{"underscore_separated:foo_bar_baz"},
{"camelCaseExample:fooBarBaz"},
{"PascalCaseExample:FooBarBaz"},
{"kebab-case-example:foo-bar-baz"},
{"mixed_case-Example:Test_Value-123"},
{"uuid-like:aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"},
{"guid-like:{550e8400-e29b-41d4-a716-446655440000}"},
{"base64-long:" .. string.rep("YWJj", 200)},
{"email-like:user.name+tag@example.co.uk"},
{"phone-like:+1-800-555-0123"},
{"iban-like:GB33BUKB20201555555555"},
{"credit-like:XXXX-XXXX-XXXX-1234"},
{"isbn-like:978-3-16-148410-0"},
{"mac-like:00:1A:2B:3C:4D:5E"},
{"ip-v4:192.168.0.1"},
{"ip-v6:2001:0db8:85a3:0000:0000:8a2e:0370:7334"},
{"url-encoded:hello%20world%21"},
{"html-encoded:&amp;&lt;&gt;"},
{"xml-encoded:&lt;tag&gt;value&lt;/tag&gt;"},
{"json-escaped:\"quote\\\"inside\"" },
{"json-multiline:{\"a\":\"line1\\nline2\"}"},
{"csv-with-quotes:\"a\",\"b\",\"c\""},
{"sql-identifier-like:identifier_name"},
{"class-like:MyClassName"},
{"function-like:my_function_name"},
{"lua-fn-ref:function_reference_no_exec"},
{"lua-table-like:{a=1,b=2}"},
{"lua-nested-table-like:{a={b={c=3}}}"},
{"lua-metatable-like:{__index=function() end}"},
{"lua-pattern:%w+%s*"},
{"lua-pattern-escape:%p"},
{"regex-like:^([A-Za-z0-9_\\-\\.]+)@(.+)$"},
{"regex-like-digits:^\\d{10}$"},
{"regex-like-guid:^[0-9a-fA-F\\-]{36}$"},
{"xml-attributes:<tag attr=\"value\">"},
{"html-with-attrs:<div id=\"x\" class=\"y\">"},
{"css-like:body { margin: 0; }"},
{"css-prop:color: #ff0000;"},
{"yaml-like:- name: test\n  value: 1"},
{"ini-like:[general]\nkey=value"},
{"toml-like:title = \"TOML Example\""},
{"proto-plain:field1:1\nfield2:2"},
{"ini-multi:[section]\nkey1=val1\nkey2=val2"},
{"markdown-link:[text](http://example.com)"},
{"markdown-code:```lua\nprint('hi')\n```"},
{"html-entities-numeric:&#65;&#66;&#67;"},
{"percentage:0.00001%"},
{"very-small-decimal:0.000000000123"},
{"very-large-number:12345678901234567890"},
{"scientific-negative: -1.23e-10"},
{"currency-format:€1.234,56"},
{"time-duration:PT1H30M"},
{"date-iso:2025-10-04"},
{"rfc-822:Mon, 02 Jan 2006 15:04:05 -0700"},
{"time-only:23:59:59"},
{"timezone:UTC+00:00"},
{"locale-tag:pt-BR"},
{"file-permission:-rwxr-xr-x"},
{"unix-owner:1000:1000"},
{"shell-like-arg:'single' \"double\""},
{"quoted-with-escapes:\"He said \\\"hi\\\"\""},
{"bracketed:[one][two][three]"},
{"pipe-separated:one|two|three"},
{"ampersand-separated:one&two&three"},
{"semicolon-separated:one;two;three"},
{"equals-assignment:key=value;key2=value2"},
{"env-var-like:PATH=/usr/bin:/bin"},
{"query-string:foo=bar&x=1&y=2"},
{"cookie-like:sessionid=abcdef; path=/; secure"},
{"jwt-like:header.payload.signature (not real)"},
{"pem-like:-----BEGIN CERTIFICATE-----\nMIIB\n-----END CERT-----"},
{"pem-key-like:-----BEGIN RSA PRIVATE KEY-----\nMIIE\n-----END RSA PRIVATE KEY-----"},
{"ini-empty-section:[empty]\n"},
{"array-nested: [[1,2],[3,4],[5,[6]]]"},
{"matrix-like:[[1,2,3],[4,5,6],[7,8,9]]"},
{"s-expression:(add (mul 2 3) 4)"},
{"lisp-like:(define (x) 1)"},
{"yaml-multi-doc:---\nname: a\n---\nname: b"},
{"test-marker:STELLYSPY_TEST"},
{"payload-tag:SAFE_TEST_PAYLOAD"},
{"sanitization-test:<script>not executed</script>"},
{"encoding-test:µñød€"},
{"normalised:ąćęłńóśżź"},
{"control-test:\u{0001}\u{0002}\u{0003}"},
{"emoji-cluster:👩‍🚀👨‍🚀👩‍🔬"},
{"directional-mark:\u{202A}left-to-right"},
{"variation-selector:\u{FE0F}"},
{"fraction-characters:⅓ ⅔ ⅖"},
{"superscript:1² 2³"},
{"subscript:H₂O"},
{"degree-symbol:45°"},
{"math-operators:± × ÷ ≈"},
{"box-drawing:┌─┬┐\n│ ││\n└─┴┘"},
{"braille:⠃⠑⠔"},
{"currency-symbols:₽ ₩ ₱"},
{"roman:MMXXV"},
{"ordinal-words:1st 2nd 3rd 4th"},
{"percentage-format:99.9999%"},
{"approx:~1000"},
{"range:10-20"},
{"range-inclusive:[10,20]"},
{"range-exclusive:(10,20)"},
{"ratio:3:2"},
{"angle:90deg"},
{"degrees-minutes:48°51'29\"N"},
{"gps-decimal:48.8584,2.2945"},
{"coordinate-dms:48°51′29″N 2°17′40″E"},
{"binary-like:010101010101"},
{"octal-like:0755"},
{"hex-like:0xDEADBEEF"},
{"escaped-unicode:\\u{1F600}"},
{"placeholder:%s %d"},
{"format-percent:%.2f"},
{"format-int:%04d"},
{"format-hex:%x"},
{"format-octal:%o"},
{"lua-pattern-escape:%-+*?()[]^$"},
{"lua-pattern-class:%d+%a*"},
{"xml-cdata:<![CDATA[some <xml> inside]]>"},
{"heredoc-like:<<EOF\nmultiline\nEOF"},
{"multiline-long:" .. string.rep("line\n", 100)},
{"repeat-unicode:" .. string.rep("漢", 200)},
{"repeat-emoji:" .. string.rep("🚀", 200)},
{"huge-mix:" .. string.rep("Ab1!漢🚀", 500)},
{"Low taper fade"},
{"Sigma"},
{"Dont trust UnknownGhost1984."},
	}
	return args